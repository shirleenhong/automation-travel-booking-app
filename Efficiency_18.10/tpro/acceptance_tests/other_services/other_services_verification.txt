*** Settings ***
Resource          ../../../resources/common/global_resources.txt

*** Keywords ***
Verify Accounting Remarks For Other Services Are Written In RM Lines
    [Arguments]    ${country}    ${is_with_gst}
    [Documentation]    Insert the ff keywords before this to get all the values that should be written in the PNR:
    ...
    ...    Keyword1: Select Vendor
    ...
    ...    Keyword2: Select Product
    ...
    ...    Keyword3: Get Service Info Field Values
    ...
    ...    Keyword4: Get Product Code And Vendor Code
    ${fee_code}    Set Variable If    '${form_of_payment.lower()}'=='cash or invoice'    FS    '${form_of_payment.lower()}'=='credit card (cc)'    FCC    '${form_of_payment.lower()}'=='credit card (cx)'
    ...    FCX4
    Set Test Variable    ${fee_code}
    Set Test Variable    ${country}
    Set Test Variable    ${is_with_gst}
    ${expiry_year_truncated}    Get Substring    ${expiry_year}    -2
    Set Test Variable    ${expiry_year_truncated}
    ${formatted_date}    Convert Date To Gds Format    ${date}    %d/%m/%Y    true
    Set Test Variable    ${formatted_date}
    Verify Exact Remark Is Written In The PNR    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK[\\d]+\\/PX1
    Run Keyword If    '${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='true'    Verify Specific Remarks For Other Services With GST Are Written In The PNR
    ...    ELSE IF    ('${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='false') or '${country}'=='hk'    Verify Specific Remarks For Other Services Without GST Are Written In The PNR    ${fee_code}
    Run Keyword If    ('${form_of_payment.lower()}'=='credit card (cc)' or '${form_of_payment.lower()}'=='credit card (cx)') and ('${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='true')    Verify Specific Remarks For Other Services With FOP CC Or CX And GST Are Written In The PNR
    ...    ELSE IF    ('${form_of_payment.lower()}'=='credit card (cc)' or '${form_of_payment.lower()}'=='credit card (cx)') and (('${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='false') or ('${country.lower()}'=='hk'))    Verify Specific Remarks For Other Services With FOP CC Or CX And No GST Are Written In The PNR
    Run Keyword If    '${bta_description}'!='${EMPTY}'    Verify Specific Remarks For Other Services With BTA Description Are Written In The PNR
    ...    ELSE IF    '${bta_description}'=='${EMPTY}'    Verify Specific Remark For Other Services Without BTA Description Is Written In The PNR
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF ${product.upper()}

Verify Active Tab
    [Arguments]    ${tab}
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    ${is_active_tab}    Is Tab Selected    ${tab}
    Run Keyword If    "${is_active_tab}"=="False"    FAIL

Verify Address 1 Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    Address1TextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Address 2 Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    Address2TextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Address Of First Name Insured Person Is Not Required
    Verify Control Object Field Is Not Mandatory    [NAME:AddressTextBox]
    Take Screenshot

Verify Address Of First Name Insured Person Is Required
    Verify Control Object Field Is Mandatory    [NAME:AddressTextBox]
    Take Screenshot

Verify Air Segments Are Retrieved Correctly And Displayed In Dropdown
    Retrieve PNR Details from Amadeus    ${current_pnr}    RTA
    Get Current Segments From The PNR For IN
    Get Air Segment Dropdown Values
    ${expected_segments_list}    Evaluate    [flight.replace("\ \ ", " ") for flight in ${segments_list}]
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${expected_segments_list}    ${displayed_segment_list}

Verify Air Segments Displayed In Select Air Segments
    Retrieve PNR Details from Amadeus    ${current_pnr}    RTA
    Get Current Segments From The PNR For IN
    #need verification
    Comment    Verify Air Segments Are Retrieved Correctly And Displayed In Dropdown    #should be from grid/table

Verify Airlines Dropdown Values
    ${expected_airlines_dropdown_values}    Create List    ${EMPTY}    Air Asia    Air Costa    Go Air    Indian Airlines
    ...    Indigo    Jet Airways    SpiceJet    TrueJet
    ${actual_airlines_dropdown_values}    Get Dropdown Values    [NAME:AirLinesComboBox]
    Log    ${actual_airlines_dropdown_values}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_airlines_dropdown_values}    ${actual_airlines_dropdown_values}

Verify All Exchange Order Remarks Items Are Deleted In Right Grid View
    Activate Power Express Window
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    Should Be Empty    ${get_values}

Verify All Exchange Order Remarks Items Are Retained In Left Grid View
    @{get_values}    Get All Cell Values In Data Grid Table    [NAME:FromEoDataGridView]
    Lists Should Be Equal    ${all_eo_remarks_list}    ${get_values}

Verify All Itinerary Remarks Items Are Deleted In Right Grid View
    Activate Power Express Window
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    Should Be Empty    ${get_values}

Verify All Itinerary Remarks Items Are Retained In Left Grid View
    @{get_values}    Get All Cell Values In Data Grid Table    [NAME:FromIoDataGridView]
    Lists Should Be Equal    ${all_io_remarks_list}    ${get_values}

Verify All Selected Exchange Order Remarks Items Are Reflected In Right Grid View
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    Lists Should Be Equal    ${get_values}    ${all_eo_remarks_list}

Verify All Selected Itinerary Remarks Items Are Reflected In Right Grid View
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    Lists Should Be Equal    ${get_values}    ${all_io_remarks_list}

Verify Amended Record Is Present In Vendor Info Tab
    [Arguments]    ${row_id}
    ${actual_list}    Create List    ${attention}    ${address}    ${city}    ${country}    ${cwt_email}
    ...    ${cwt_phone}
    Set Suite Variable    ${actual_list${row_id.lower()}}    ${actual_list}
    Set Suite Variable    ${actual_list${row_id}}
    Set Suite Variable    ${actual_list}
    ${status}    Run Keyword And Return Status    List Should Contain Sub List    ${actual_list${row_id}}    ${expected_list${row_id}}
    Run Keyword And Continue On Failure    Run Keyword If    ${status}==True    Log    Amend is successfull
    Log    ${actual_list${row_id}}
    Log    ${expected_list${row_id}}

Verify Amount Is Correct
    [Arguments]    ${actual_daily_rate_amount}
    Get Daily Rate Amount
    Run Keyword And Continue On Failure    Should Be Equal    ${daily_rate_amount}    ${actual_daily_rate_amount}

Verify Associated Charges Accounting Lines For BTC Are Written In The PNR
    [Arguments]    ${row_id}
    Retrieve PNR Details from Amadeus    ${current_pnr}    RTY
    ${product_code}    Get From List    ${assoc_charges_row${row_id}}    0
    ${current_vendor_code}    Get From List    ${assoc_charges_row${row_id}}    1
    ${assoc_charges_gross_sell}    Get From List    ${assoc_charges_row${row_id}}    2
    ${assoc_charges_commission}    Get From List    ${assoc_charges_row${row_id}}    3
    ${gst}    Get From List    ${assoc_charges_row${row_id}}    4
    ${assoc_charges_remarks_gst_value}    Get From List    ${assoc_charges_row${row_id}}    5
    ${ot1}    Get From List    ${assoc_charges_row${row_id}}    6
    ${assoc_charges_remarks_ff99_ot1_value}    Get From List    ${assoc_charges_row${row_id}}    7
    ${ot2}    Get From List    ${assoc_charges_row${row_id}}    8
    ${assoc_charges_remarks_ff99_ot2_value}    Get From List    ${assoc_charges_row${row_id}}    9
    ${product_name}    Get From List    ${assoc_charges_row${row_id}}    10
    ${assoc_charges_vatgst_amount}    Get From List    ${assoc_charges_row${row_id}}    11
    ${assoc_charges_other_related_no}    Get From List    ${assoc_charges_row${row_id}}    12
    ${assoc_charges_vendor_ref_no}    Get From List    ${assoc_charges_row${row_id}}    13
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${current_vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}" or "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${assoc_charges_gross_sell}/SF${assoc_charges_gross_sell}/C${assoc_charges_commission}/FS
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF99-${gst}P${assoc_charges_remarks_gst_value}*${ot1}P${assoc_charges_remarks_ff99_ot1_value}*${ot2}P${assoc_charges_remarks_ff99_ot2_value}/FF34-AB/FF35-OTH
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC87/V00800011/TK${eo_number}/PX1
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}" or "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${assoc_charges_vatgst_amount}/SF${assoc_charges_vatgst_amount}/C0/FS
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF VAT

Verify Associated Charges Accounting Lines For CC Are Written In The PNR
    [Arguments]    ${row_id}
    ${product_code}    Get From List    ${assoc_charges_row${row_id}}    0
    ${current_vendor_code}    Get From List    ${assoc_charges_row${row_id}}    1
    ${assoc_charges_gross_sell}    Get From List    ${assoc_charges_row${row_id}}    2
    ${assoc_charges_commission}    Get From List    ${assoc_charges_row${row_id}}    3
    ${gst}    Get From List    ${assoc_charges_row${row_id}}    4
    ${assoc_charges_remarks_gst_value}    Get From List    ${assoc_charges_row${row_id}}    5
    ${ot1}    Get From List    ${assoc_charges_row${row_id}}    6
    ${assoc_charges_remarks_ff99_ot1_value}    Get From List    ${assoc_charges_row${row_id}}    7
    ${ot2}    Get From List    ${assoc_charges_row${row_id}}    8
    ${assoc_charges_remarks_ff99_ot2_value}    Get From List    ${assoc_charges_row${row_id}}    9
    ${assoc_charges_fop_type}    Get From List    ${assoc_charges_row${row_id}}    10
    ${assoc_charges_cc_type}    Get From List    ${assoc_charges_row${row_id}}    11
    ${assoc_charges_card_number}    Get From List    ${assoc_charges_row${row_id}}    12
    ${assoc_charges_expiry_month}    Get From List    ${assoc_charges_row${row_id}}    13
    ${split_year}    Get From List    ${assoc_charges_row${row_id}}    14
    ${assoc_charges_vatgst_amount}    Get From List    ${assoc_charges_row${row_id}}    15
    ${assoc_charges_merchant_fee}    Get From List    ${assoc_charges_row${row_id}}    16
    ${assoc_charges_total_selling_price}    Get From List    ${assoc_charges_row${row_id}}    17
    ${assoc_charges_merchant_gst}    Get From List    ${assoc_charges_row${row_id}}    18
    ${assoc_charges_merchant_ot1}    Get From List    ${assoc_charges_row${row_id}}    19
    ${assoc_charges_merchant_gst_value}    Get From List    ${assoc_charges_row${row_id}}    20
    ${assoc_charges_merchant_ot1_calvalue}    Get From List    ${assoc_charges_row${row_id}}    21
    ${assoc_charges_merchant_ot2_calvalue}    Get From List    ${assoc_charges_row${row_id}}    22
    ${assoc_charges_vat_total_calvalue}    Get From List    ${assoc_charges_row${row_id}}    23
    ${assoc_charges_other_related_no}    Get From List    ${assoc_charges_row${row_id}}    24
    ${assoc_charges_vendor_ref_no}    Get From List    ${assoc_charges_row${row_id}}    25
    Run Keyword If    "${assoc_charges_cc_type}"=="VI" or "${assoc_charges_cc_type}"=="CA"    Set Suite Variable    ${assoc_charges_cc_type_code}    CX4
    ...    ELSE IF    "${assoc_charges_cc_type}"=="AX"    Set Suite Variable    ${assoc_charges_cc_type_code}    CX2
    ${assoc_charges_card_number}    Get Substring    ${assoc_charges_card_number}    -4
    Comment    ${assoc_charges_gross_sell}    Truncate Decimal Value    ${assoc_charges_gross_sell}
    Comment    ${assoc_charges_commission}    Truncate Decimal Value    ${assoc_charges_commission}
    Comment    ${assoc_charges_vat_total_calvalue}    Truncate Decimal Value    ${assoc_charges_vat_total_calvalue}
    ${assoc_charges_gross_sell}    Round Apac    ${assoc_charges_gross_sell}    IN
    ${assoc_charges_commission}    Round Apac    ${assoc_charges_commission}    IN
    ${assoc_charges_vat_total_calvalue}    Round Apac    ${assoc_charges_vat_total_calvalue}    IN
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${current_vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}" or "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${assoc_charges_gross_sell}/SF${assoc_charges_gross_sell}/C${assoc_charges_commission}/F${assoc_charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${assoc_charges_cc_type}([A-Z0-9]+)${assoc_charges_card_number}EXP${assoc_charges_expiry_month}${split_year}\\/D${assoc_charges_gross_sell}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF99-${gst}P${assoc_charges_remarks_gst_value}*${ot1}P${assoc_charges_remarks_ff99_ot1_value}*${ot2}P${assoc_charges_remarks_ff99_ot2_value}/FF34-AB/FF35-OTH
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC87/V00800011/TK${eo_number}/PX1
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}" or "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${assoc_charges_vatgst_amount}/SF${assoc_charges_vatgst_amount}/C0/F${assoc_charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${assoc_charges_cc_type}([A-Z0-9]+)${assoc_charges_card_number}EXP${assoc_charges_expiry_month}${split_year}\\/D${assoc_charges_vatgst_amount}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF VAT
    Verify Specific Remark Is Written In The PNR    RM *MS/PC40/V00800004/TK${eo_number}/PX1
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}" or "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${assoc_charges_merchant_fee}/SF${assoc_charges_merchant_fee}/C${assoc_charges_merchant_fee}/F${assoc_charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${assoc_charges_cc_type}([A-Z0-9]+)${assoc_charges_card_number}EXP${assoc_charges_expiry_month}${split_year}\\/D${assoc_charges_merchant_fee}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF99-${assoc_charges_merchant_gst}P${assoc_charges_merchant_gst_value}*${assoc_charges_merchant_ot1}P${assoc_charges_merchant_ot1_calvalue}*${assoc_charges_merchant_ot2}P${assoc_charges_merchant_ot2_calvalue}/FF34-AB/FF35-OTH
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF MERCHANT FEE
    Verify Specific Remark Is Written In The PNR    RM *MS/PC87/V00800011/TK${eo_number}/PX1
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}"or "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${assoc_charges_vat_for_merchfee_calvalue}/SF${assoc_charges_vat_for_merchfee_calvalue}/C0/F${assoc_charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${assoc_charges_cc_type}([A-Z0-9]+)${assoc_charges_card_number}EXP${assoc_charges_expiry_month}${split_year}\\/D${assoc_charges_vat_for_merchfee_calvalue}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF VAT

Verify Associated Charges Fields Are Mandatory
    Verify Control Object Is Visible    [NAME:AssociatedCharges_ProductCombobox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AssociatedCharges_ProductCombobox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_VendorComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AssociatedCharges_VendorComboBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_NetCostTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AssociatedCharges_NetCostTextBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_CommisionTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AssociatedCharges_CommisionTextBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_DiscountTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AssociatedCharges_DiscountTextBox]

Verify Associated Charges Fields Are Optional
    Verify Control Object Is Visible    [NAME:AssociatedCharges_DescriptionTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AssociatedCharges_DescriptionTextBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_CWTReferenceNoTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AssociatedCharges_CWTReferenceNoTextBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_VendorReferenceNoTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AssociatedCharges_VendorReferenceNoTextBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_OtherRelatedNoTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AssociatedCharges_OtherRelatedNoTextBox]

Verify BTA Description Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    Get BTA Description Value
    Verify Actual Value Matches Expected Value    ${bta_description}    ${expected_value}
    Take Screenshot

Verify CC Number In Request Is Correct
    [Arguments]    ${actual_cc_number}
    Get CC Number In Request Tab When Products Are Air BSp Or Air Domestic
    Run Keyword And Continue On Failure    Should Be Equal    ${actual_cc_number}    ${cc_number}    PASSED: Values are equal

Verify CC Preference In Request Is Correct
    [Arguments]    ${actual_cc_preference}
    Get CC Preference In Request Tab
    Run Keyword And Continue On Failure    Should Be Equal    ${actual_cc_preference}    ${cc_preference}    PASSED: Values are equal

Verify CC Type In Request Is Correct
    [Arguments]    ${actual_cc_type}
    Get CC Type In Request Tab When Products Are Air BSp Or Air Domestic
    Run Keyword And Continue On Failure    Should Be Equal    ${actual_cc_type}    ${cc_type}    PASSED: Values are equal

Verify Calculations In Other Services
    [Arguments]    ${tab}    ${country}
    [Documentation]    This is the highest level keyword used to verify all the calculations in Other Services. Call this keyword in the test case after Populate Keyword.
    ${tab}=    Convert To Lowercase    ${tab}
    ${tab}=    Replace String    ${tab}    ${SPACE}    _
    ${country}=    Convert To Lowercase    ${country}
    ${country}=    Replace String    ${country}    ${SPACE}    _
    Run Keyword If    '${tab}'=='service_info' and '${country}'=='in'    Verify India Service Info Charges Are Correct

Verify Charges Accounting Lines For BTC Are Written In The PNR
    [Arguments]    ${row_id}
    Retrieve PNR Details from Amadeus    ${current_pnr}    RTY
    ${product_code}    Get From List    ${charges_row${row_id}}    0
    ${vendor_code}    Get From List    ${charges_row${row_id}}    1
    ${charges_gross_sell}    Get From List    ${charges_row${row_id}}    2
    ${charges_commission}    Get From List    ${charges_row${row_id}}    3
    ${gst}    Get From List    ${charges_row${row_id}}    4
    ${charges_remarks_gst_value}    Get From List    ${charges_row${row_id}}    5
    ${ot1}    Get From List    ${charges_row${row_id}}    6
    ${charges_remarks_ff99_ot1_value}    Get From List    ${charges_row${row_id}}    7
    ${ot2}    Get From List    ${charges_row${row_id}}    8
    ${charges_remarks_ff99_ot2_value}    Get From List    ${charges_row${row_id}}    9
    ${product_name}    Get From List    ${charges_row${row_id}}    10
    ${charges_vatgst_amount}    Get From List    ${charges_row${row_id}}    11
    ${charges_other_related_no}    Get From List    ${charges_row${row_id}}    12
    ${charges_vendor_ref_no}    Get From List    ${charges_row${row_id}}    13
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" or "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${charges_gross_sell}/SF${charges_gross_sell}/C${charges_commission}/FS
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF99-${gst}P${charges_remarks_gst_value}*${ot1}P${charges_remarks_ff99_ot1_value}*${ot2}P${charges_remarks_ff99_ot2_value}/FF34-AB/FF35-OTH
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC87/V00800011/TK${eo_number}/PX1
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" or "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${charges_vatgst_amount}/SF${charges_vatgst_amount}/C0/FS
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF VAT

Verify Charges Accounting Lines For CC Are Written In The PNR
    [Arguments]    ${row_id}    ${is_written}=true
    ${product_code}    Get From List    ${charges_row${row_id}}    0
    ${vendor_code}    Get From List    ${charges_row${row_id}}    1
    ${charges_gross_sell}    Get From List    ${charges_row${row_id}}    2
    ${charges_commission}    Get From List    ${charges_row${row_id}}    3
    ${gst}    Get From List    ${charges_row${row_id}}    4
    ${charges_remarks_gst_value}    Get From List    ${charges_row${row_id}}    5
    ${ot1}    Get From List    ${charges_row${row_id}}    6
    ${charges_remarks_ff99_ot1_value}    Get From List    ${charges_row${row_id}}    7
    ${ot2}    Get From List    ${charges_row${row_id}}    8
    ${charges_remarks_ff99_ot2_value}    Get From List    ${charges_row${row_id}}    9
    ${charges_fop_type}    Get From List    ${charges_row${row_id}}    10
    ${charges_cc_type}    Get From List    ${charges_row${row_id}}    11
    ${charges_card_number}    Get From List    ${charges_row${row_id}}    12
    ${charges_expiry_month}    Get From List    ${charges_row${row_id}}    13
    ${split_year}    Get From List    ${charges_row${row_id}}    14
    ${charges_vatgst_amount}    Get From List    ${charges_row${row_id}}    15
    ${charges_merchant_fee}    Get From List    ${charges_row${row_id}}    16
    ${charges_total_selling_price}    Get From List    ${charges_row${row_id}}    17
    ${charges_merchant_gst}    Get From List    ${charges_row${row_id}}    18
    ${charges_merchant_ot1}    Get From List    ${charges_row${row_id}}    19
    ${charges_merchant_gst_value}    Get From List    ${charges_row${row_id}}    20
    ${charges_merchant_ot1_calvalue}    Get From List    ${charges_row${row_id}}    21
    ${charges_merchant_ot2_calvalue}    Get From List    ${charges_row${row_id}}    22
    ${charges_vat_total_calvalue}    Get From List    ${charges_row${row_id}}    23
    ${charges_other_related_no}    Get From List    ${charges_row${row_id}}    24
    ${charges_vendor_ref_no}    Get From List    ${charges_row${row_id}}    25
    Run Keyword If    "${charges_cc_type}"=="VI" or "${charges_cc_type}"=="CA"    Set Suite Variable    ${charges_cc_type_code}    CX4
    ...    ELSE IF    "${charges_cc_type}"=="AX"    Set Suite Variable    ${charges_cc_type_code}    CX2
    ${charges_card_number}    Get Substring    ${charges_card_number}    -4
    ${charges_gross_sell}    Round Apac    ${charges_gross_sell}    IN
    ${charges_commission}    Round Apac    ${charges_commission}    IN
    ${charges_vat_total_calvalue}    Round Apac    ${charges_vat_total_calvalue}    IN
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" or "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${charges_gross_sell}/SF${charges_gross_sell}/C${charges_commission}/F${charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${charges_cc_type}([A-Z0-9]+)${charges_card_number}EXP${charges_expiry_month}${split_year}\\/D${charges_gross_sell}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF99-${gst}P${charges_remarks_gst_value}*${ot1}P${charges_remarks_ff99_ot1_value}*${ot2}P${charges_remarks_ff99_ot2_value}/FF34-AB/FF35-OTH
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC87/V00800011/TK${eo_number}/PX1
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" or "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${charges_vatgst_amount}/SF${charges_vatgst_amount}/C0/F${charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${charges_cc_type}([A-Z0-9]+)${charges_card_number}EXP${charges_expiry_month}${split_year}\\/D${charges_vatgst_amount}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF VAT
    Verify Specific Remark Is Written In The PNR    RM *MS/PC40/V00800004/TK${eo_number}/PX1
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" or "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${charges_merchant_fee}/SF${charges_merchant_fee}/C${charges_merchant_fee}/F${charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${charges_cc_type}([A-Z0-9]+)${charges_card_number}EXP${charges_expiry_month}${split_year}\\/D${charges_merchant_fee}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF99-${charges_merchant_gst}P${charges_merchant_gst_value}*${charges_merchant_ot1}P${charges_merchant_ot1_calvalue}*${charges_merchant_ot2}P${charges_merchant_ot2_calvalue}/FF34-AB/FF35-OTH
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF MERCHANT FEE
    Verify Specific Remark Is Written In The PNR    RM *MS/PC87/V00800011/TK${eo_number}/PX1
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" or "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Verify Specific Remark Is Written In The PNR    RM *MSX/S${charges_vat_for_merchfee_calvalue}/SF${charges_vat_for_merchfee_calvalue}/C0/F${charges_cc_type_code}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${charges_cc_type}([A-Z0-9]+)${charges_card_number}EXP${charges_expiry_month}${split_year}\\/D${charges_vat_for_merchfee_calvalue}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-#CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF VAT

Verify Checkin Date Is Correct
    [Arguments]    ${actual_checkin_date}
    Get Checkin Date
    ${checkin_date}    Convert Date To Gds Format    ${checkin_date}    %d/%m/%Y
    Run Keyword And Continue On Failure    Should Be Equal    ${checkin_date}    ${actual_checkin_date}

Verify Checkout Date Is Correct
    [Arguments]    ${actual_checkout_date}
    Get Checkout Date
    ${checkout_date}    Convert Date To Gds Format    ${checkout_date}    %d/%m/%Y
    Run Keyword And Continue On Failure    Should Be Equal    ${checkout_date}    ${actual_checkout_date}

Verify City Code Is Correct
    [Arguments]    ${actual_city_code}
    Get City Code
    Run Keyword And Continue On Failure    Should Be Equal    ${city_code}    ${actual_city_code}

Verify City Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    CityTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Client Exempt Checkbox Status
    [Arguments]    ${is_ticked}
    ${object}    Determine Multiple Object Name Based On Active Tab    Charges_ClientExemptCheckbox,AssociatedCharges_ClientExemptCheckbox    False
    ${is_checked}    Get Checkbox Status    ${object}
    ${client_exempt_checkbox_status}    Set Variable If    "${is_checked.upper()}" == "TRUE"    true    false
    Run Keyword And Continue On Failure    Should Be Equal    ${client_exempt_checkbox_status.lower()}    ${is_ticked.lower()}

Verify Client Exempt In Associated Charges Is Disabled
    Verify Control Object Is Visible    [NAME:AssociatedCharges_ClientExemptCheckbox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_ClientExemptCheckbox]

Verify Commission Calculation Is Correct
    [Arguments]    ${identifier}
    ${calculated_commission}    Convert To String    ${calculated_commission}
    Run Keyword And Continue On Failure    Should Be Equal    ${calculated_commission}    ${${identifier}_commission}

Verify Commission Computation In Associated Charges
    [Arguments]    ${commission_status}
    ${computed_commission}=    Run Keyword If    '${commission_status.lower()}'!='cash'    Evaluate    (${cost_amount} *${commission_percentage} * 0.01)
    ...    ELSE    Set Variable    ${assoc_charges_commission}
    ${computed_commission}    Round Off    ${computed_commission}    0
    Set Test Variable    ${computed_commission}
    [Return]    ${compute_commission}

Verify Commission Fee Value Is Correct
    [Arguments]    ${expected_commission_value}=${EMPTY}
    ${expected_commission}    Run Keyword If    "${expected_commission_value}" == "${EMPTY}"    Get Variable Value    ${computed_commission}    ${expected_commission_value}
    ...    ELSE    Set Variable    ${expected_commission_value}
    Get Commission
    Verify Actual Value Matches Expected Value    ${commission}    ${expected_commission}

Verify Computed Commission Displayed In Power Express Is Correct
    [Arguments]    ${country}
    ${computed_commission}    Set Variable    0
    ${computed_commission}    Run Keyword If    ${total_selling_price} > ${nett_cost}    Evaluate    ${total_selling_price}- ${nett_cost}
    ...    ELSE IF    ${total_selling_price} <= ${nett_cost}    Set Variable    0
    Set Test Variable    ${computed_commission}
    Run Keyword If    '${country.lower()}'=='sg'    Convert Computed Other Services Values To Float
    Run Keyword If    '${country.lower()}'=='hk'    Round Up Hk Computed Other Services Values
    Should Be Equal As Numbers    ${commission}    ${computed_commission}
    Set Suite Variable    ${computed_commission}

Verify Computed Total Selling Price Displayed In Power Express Is Correct
    [Arguments]    ${expected_total_selling_price}    ${actual_total_selling_price}
    Should Be Equal As Numbers    ${expected_total_selling_price}    ${actual_total_selling_price}

Verify Contact No Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    ContactNumberTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Country Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    CountryTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Credit Terms Values Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    CreditTermsTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Custom Fields Are Mandatory When Product Is Visa
    #Demand Draft Required
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:DemandDraftRequiredComboBox]

Verify Custom Fields Are Optional When Product Is Visa Handling Fee
    #Demand Draft Number
    Set Demand Draft Number    ${EMPTY}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DemandDraftNumberTextBox]
    #Validity Custom Field
    Set Validity Custom Field    ${EMPTY}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ValidityTextBox2]

Verify Daily Rate Is Correct
    [Arguments]    ${actual_daily_rate}
    Get Daily Rate
    Run Keyword And Continue On Failure    Should Be Equal    ${daily_rate}    ${actual_daily_rate}

Verify Date Value Is Correct
    [Documentation]    \#Expected Date is placed in Finish PNR keyword
    Get Date Value
    Verify Actual Value Matches Expected Value    ${additional_info_date}    ${date_today_for_eo}
    Take Screenshot

Verify Default Form Of Payment Is Correct
    [Arguments]    ${fop_value}    ${fop_cc_type}=${EMPTY}    ${fop_cc_number}=${EMPTY}    ${fop_expiry_date}=${EMPTY}
    Get Form Of Payment
    Run Keyword And Continue On Failure    Should Be Equal    ${form_of_payment}    ${fop_value}
    Run Keyword If    "${form_of_payment}" != "Cash or Invoice"    Verify FOP Details Are Correct    ${form_of_payment}    ${fop_cc_type}    ${fop_cc_number}    ${fop_expiry_date}

Verify Default Value For Departure Fields Are Correct
    ${current_date}=    SyexDateTimeLibrary.Get Current Date
    Get Depart Date
    Verify Text Contains Expected Value    ${depart_date}    ${current_date}
    Get Depart Origin
    Verify Text Contains Expected Value    ${depart_origin}    ${EMPTY}
    Get Depart Destination
    Verify Text Contains Expected Value    ${depart_destination}    ${EMPTY}
    Verify Control Object Field Is Mandatory    [NAME:DepartRoutingTextBox]
    Get Depart Routing Description
    Verify Text Contains Expected Value    ${depart_routing}    ${EMPTY}
    Take Screenshot

Verify Default Value For Return Fields Are Correct
    ${current_date}=    SyexDateTimeLibrary.Get Current Date
    Get Return Date
    Verify Text Contains Expected Value    ${depart_date}    ${current_date}
    Get Return Origin
    Verify Text Contains Expected Value    ${return_origin}    ${EMPTY}
    Get Return Destination
    Verify Text Contains Expected Value    ${return_destination}    ${EMPTY}
    Verify Control Object Field Is Not Mandatory    [NAME:ReturnRoutingTextBox]
    Get Return Routing Description
    Verify Text Contains Expected Value    ${return_routing}    ${EMPTY}
    Take Screenshot
    Get Class Cabin
    Verify Text Contains Expected Value    ${class_cabin}    Economy
    Get Passenger ID Value
    Verify Text Contains Expected Value    ${passenger_id}    ${EMPTY}

Verify Default Value In Name
    [Arguments]    ${expected_name}
    Get Name
    Verify Actual Value Matches Expected Value    ${name}    ${expected_name}

Verify Default Value In Number Of Days
    [Arguments]    ${expected_number_of_days}
    Get Number Of Days
    Verify Actual Value Matches Expected Value    ${number_of_days}    ${expected_number_of_days}

Verify Default Value Of Attention In Vendor Info Tab
    Run Keyword And Continue On Failure    Run Keyword If    "${attention}"=="${EMPTY}"    Log    Attention Field Is Blank : ${attention}
    ...    ELSE    Fail

Verify Default Value Of CC Number In Request Tab For Both Air BSp Or Air Domestic Products
    ${cc_number}    Get Control Text Value    [NAME:CreditCardNumberTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${cc_number}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${cc_number}

Verify Default Value Of CC Type In Associated Charges
    [Arguments]    ${pnr_cc_type}
    Get CC Type In Associated Charges
    Run Keyword And Continue On Failure    Should Be Equal    ${assoc_charges_cc_type}    ${pnr_cc_type}

Verify Default Value Of CC Type In Request Tab For Both Air BSp Or Air Domestic Products
    ${cc_type}    Get Control Text Value    [NAME:CreditCardTypeCombobox]
    Run Keyword And Continue On Failure    Run Keyword If    '${cc_type}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${cc_type}

Verify Default Value Of CWT Reference No (TK) In Associated Charges
    ${assoc_charges_cwt_ref_no}    Get Control Text Value    [NAME:AssociatedCharges_CWTReferenceNoTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_cwt_ref_no}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Card Number In Associated Charges
    [Arguments]    ${pnr_card_number}
    Get Card Number In Associated Charges
    Run Keyword And Continue On Failure    Should Be Equal    ${assoc_charges_card_number}    ${pnr_card_number}

Verify Default Value Of City In Request
    ${request_city}    Get Control Text Value    [NAME:CityComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${request_city}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of City In Request When Product Is Tour Intl
    ${request_city}    Get Control Text Value    [NAME:CityComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${request_city}"!="${EMPTY}"    FAIL

Verify Default Value Of Commission In Associated Charges
    ${assoc_charges_commission}    Get Control Text Value    [NAME:AssociatedCharges_CommisionTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_commission}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Contact Type In Vendor Info Tab
    Run Keyword And Continue On Failure    Run Keyword If    "${contact_type}"=="-- Select Contact Type --"    Log    Contact Type Is : ${contact_type}
    ...    ELSE    Fail

Verify Default Value Of Cost Amount In Associated Charges
    ${assoc_charges_cost_amount}    Get Control Text Value    [NAME:AssociatedCharges_NetCostTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_cost_amount}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Country
    ${country}    Get Control Text Value    [NAME:CountryComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${country}"!="${EMPTY}"    FAIL    Incorrect Default Value

Verify Default Value Of Date
    [Arguments]    ${control_id}
    ${default_date_x}    Get Control Text    ${control_id}
    ${default_date}    Get From List    ${default_date_x}    0
    ${default_date}    Evaluate    str("${default_date}")
    ${date}=    DateTime.Get Current Date    result_format=datetime
    ${date}=    Convert Date    ${date}    result_format=%d/%m/%Y
    Should Be Equal    ${date}    ${default_date.strip()}

Verify Default Value Of Date In Request
    ${default_date_x}    Get Control Text    [NAME:DateDatePicker]
    ${default_date}    Get From List    ${default_date_x}    0
    ${default_date}    Evaluate    str("${default_date}")
    ${date}=    DateTime.Get Current Date    result_format=datetime
    ${date}=    Convert Date    ${date}    result_format=%d/%b/%Y
    Run Keyword And Continue On Failure    Should Be Equal    ${date}    ${default_date.strip()}

Verify Default Value Of Date Of Application
    ${date_of_application}    Get Control Text Value    [NAME:DateOfApplicationTextBox]
    #current date
    ${current_date}    Get Current Date
    ${current_date_gds_format}    Convert Date To Gds Format    ${current_date}    %m/%d/%Y
    ${split_current_date}    Split String    ${current_date}    /
    ${current_year}    Get From List    ${split_current_date}    2
    ${current_year}    Convert To String    ${current_year}
    ${current_date}    Convert To String    ${current_date_gds_format}${current_year}
    #date of application
    ${date_of_application_split}    Split String    ${date_of_application}    /
    ${day}    Get From List    ${date_of_application_split}    0
    ${month}    Get From List    ${date_of_application_split}    1
    ${month}    Convert To Uppercase    ${month}
    ${year}    Get From List    ${date_of_application_split}    2
    ${date_of_application}    Convert To String    ${day}${month}${year}
    Run Keyword And Continue On Failure    Should Be Equal    ${current_date.strip()}    ${date_of_application.strip()}

Verify Default Value Of Demand Draft Number
    ${demand_draft_number}    Get Control Text Value    [NAME:DemandDraftNumberTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${demand_draft_number}"!="${EMPTY}"    FAIL    Incorrect Default Value

Verify Default Value Of Demand Draft Required
    ${demand_draft_required}    Get Control Text Value    [NAME:DemandDraftRequiredComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${demand_draft_required}"!="${EMPTY}"    FAIL    Incorrect Default Value

Verify Default Value Of Description In Associated Charges On Load Of Tab
    ${assoc_charges_description}    Get Control Text Value    [NAME:AssociatedCharges_DescriptionTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_description}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Description In Associated Charges On Select Of Product
    [Arguments]    ${assoc_charges_product}
    ${assoc_charges_description}    Get Control Text Value    [NAME:AssociatedCharges_DescriptionTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_description.lower()}'!='${assoc_charges_product.lower()}'    FAIL    Incorrect Default Value

Verify Default Value Of Details In Request When Product Is Tour Intl
    ${request_details}    Get Control Text Value    [NAME:DetailsTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${request_details}"!="${EMPTY}"    FAIL

Verify Default Value Of Discount In Associated Charges
    ${assoc_charges_discount}    Get Control Text Value    [NAME:AssociatedCharges_DiscountTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_discount}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Doc Type
    ${doc_type}    Get Control Text Value    [NAME:DocTypeComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${doc_type}"!="Fresh"    FAIL    Incorrect Default Value

Verify Default Value Of Document
    ${document}    Get Control Text Value    [NAME:DocumentComboBox]
    ${document}    Convert To String    ${document}
    Run Keyword And Continue On Failure    Run Keyword If    "${document}"!="Passport"    FAIL    Incorrect Default Value

Verify Default Value Of End Date In Request When Product Is Tour Intl
    ${default_date_x}    Get Control Text    [NAME:EndDateDatePicker]
    ${default_date}    Get From List    ${default_date_x}    0
    ${default_date}    Evaluate    str("${default_date}")
    ${date}=    DateTime.Get Current Date    result_format=datetime
    ${date}=    Convert Date    ${date}    result_format=%d/%b/%Y
    Run Keyword And Continue On Failure    Should Be Equal    ${date}    ${default_date.strip()}

Verify Default Value Of Entries
    ${entries}    Get Control Text Value    [NAME:EntriesComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${entries}"!="Single"    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Verify Control Object Is Disabled    [NAME:EntriesComboBox]

Verify Default Value Of Equivalent Amt Paid in Request Tab For Both Air BSp Or Air Domestic Products
    ${equivalent_amt_paid}    Get Control Text Value    [NAME:EquivalentAmountPaidTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${equivalent_amt_paid}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${equivalent_amt_paid}

Verify Default Value Of Exp Date In Request Tab For Both Air BSp Or Air Domestic Products
    ${cc_exp_date}    Get Control Text Value    [NAME:ExpiryDateDatePicker]
    ${date}    DateTime.Get Current Date    result_format=%m/%Y
    Run Keyword And Continue On Failure    Run Keyword If    '${cc_exp_date}'!='${date}'    FAIL    Incorrect Default Value
    Set Test Variable    ${cc_exp_date}

Verify Default Value Of Expiry Month In Associated Charges
    [Arguments]    ${pnr_expiry_month}
    Get Expiry Month In Associated Charges
    Run Keyword And Continue On Failure    Should Be Equal    ${assoc_charges_expiry_month}    ${pnr_expiry_month}

Verify Default Value Of Expiry Year In Associated Charges
    [Arguments]    ${pnr_expiry_year}
    Get Expiry Year In Associated Charges
    Run Keyword And Continue On Failure    Should Be Equal    ${assoc_charges_expiry_year}    ${pnr_expiry_year}

Verify Default Value Of FOP in Request Tab For Both Air BSp Or Air Domestic Products
    ${fop}    Get Control Text Value    [NAME:FormOfPaymentCombobox]
    Run Keyword And Continue On Failure    Run Keyword If    '${fop}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${fop}

Verify Default Value Of Fare In Request Tab For Both Air BSp Or Air Domestic Products
    ${fare}    Get Control Text Value    [NAME:FareTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${fare}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${fare}

Verify Default Value Of Fare Type In Request Tab For Both Air BSp Or Air Domestic Products
    ${fare_type}    Get Control Text Value    [NAME:FareTypeComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${fare_type}'!='P'    FAIL    Incorrect Default Value

Verify Default Value Of Form Of Payment In Associated Charges When FP Line Is Credit Card
    ${fop_type}    Get Control Text Value    [NAME:AssociatedCharges_FormOfPaymentComboBox]
    ${fop_type}    Convert To Lowercase    ${fop_type}
    Run Keyword And Continue On Failure    Should Be Equal    ${fop_type}    cc

Verify Default Value Of Gross Sell In Associated Charges
    ${assoc_charges_gross_sell}    Get Control Text Value    [NAME:AssociatedCharges_GrossSellTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_gross_sell}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Headline Currency In Request Tab For Both Air BSp Or Air Domestic Products
    ${headline_currency}    Get Control Text Value    [NAME:HeadlineCurrencyComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${headline_currency}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${headline_currency}

Verify Default Value Of In Conjunction With In Request Tab For Both Air BSp Or Air Domestic Products
    ${in_conjunction_with}    Get Control Text Value    [NAME:InConjunctionWithTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${in_conjunction_with}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${in_conjunction_with}

Verify Default Value Of Internal Remarks
    ${internal_remarks}    Get Control Text Value    [NAME:InternalRemarksTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${internal_remarks}"!="${EMPTY}"    FAIL    Incorrect Default Value

Verify Default Value Of Internal Remarks In Request
    ${request_internal_remarks}    Get Control Text Value    [NAME:InternalRemarksTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${request_internal_remarks}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Internal Remarks In Request When Product Is Tour Intl
    ${request_internal_remarks}    Get Control Text Value    [NAME:InternalRemarksTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${request_internal_remarks}"!="${EMPTY}"    FAIL

Verify Default Value Of Issue In Exchange For In Request Tab For Both Air BSp Or Air Domestic Products
    ${issue_in_exchange_for}    Get Control Text Value    [NAME:IssueInExchangeForTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${issue_in_exchange_for}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${issue_in_exchange_for}

Verify Default Value Of Locations In Request
    ${request_locations}    Get Control Text Value    [NAME:LocationsTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${request_locations}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Merchant Fee In Associated Charges
    ${assoc_charges_merchant_fee}    Get Control Text Value    [NAME:AssociatedCharges_MerchantFeeTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_merchant_fee}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Original Place Of Issue In Request Tab For Both Air BSp Or Air Domestic Products
    ${original_place_of_issue}    Get Control Text Value    [NAME:OriginalPlaceOfIssueTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${original_place_of_issue}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${original_place_of_issue}

Verify Default Value Of Other Related No (PO) In Associated Charges
    ${assoc_charges_other_related_no}    Get Control Text Value    [NAME:AssociatedCharges_OtherRelatedNoTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_other_related_no}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of PNR In Request Tab For Both Air BSp Or Air Domestic Products
    ${pnr_disabled}    Verify Control Object Is Disabled    [NAME:PNRTextbox]
    Log    ${pnr_disabled}
    ${pnr_detail}    Get Control Text Value    [NAME:PNRTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${pnr_detail.upper()}'!='${current_pnr}'    FAIL    Incorrect Default Value
    Comment    Run Keyword And Continue On Failure    Run Keyword If    '${pnr_disabled}'!='TRUE'    FAIL    Incorrect Default Value

Verify Default Value Of Package Name In Request When Product Is Tour Intl
    ${request_package_name}    Get Control Text Value    [NAME:PackageNameTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${request_package_name}"!="${EMPTY}"    FAIL

Verify Default Value Of Plating Carrier
    Retrieve PNR Details from Amadeus    ${current_pnr}    RTA
    Get Current Segments From The PNR
    ${plating_carrier_list}    Create List
    : FOR    ${segments_range}    IN    @{segments_list}
    \    ${segments_range_val}    Get Substring    ${segments_range}    0    1
    \    Comment    Select Air Segment    ${segments_range_val}
    \    ${plating_carrier}    Get Substring    ${segments_range}    1    5
    \    ${plating_carrier}    Strip String    ${plating_carrier}
    \    Append To List    ${plating_carrier_list}    ${plating_carrier}
    \    Exit For Loop
    ${plating_carrier_segment_1}    Get From List    ${plating_carrier_list}    0
    Get Plating Carrier
    Run Keyword And Continue On Failure    Should Be Equal    ${plating_carrier}    ${plating_carrier_segment_1}

Verify Default Value Of Prefer CheckBox In Vendor Info Tab
    Run Keyword And Continue On Failure    Run Keyword If    "${prefer}"==False    Log    Prefer is Unticked
    ...    ELSE    Fail

Verify Default Value Of Processing Type
    ${processing_type}    Get Control Text Value    [NAME:ProcessingTypeComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${processing_type}"!="Normal"    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Verify Control Object Is Disabled    [NAME:ProcessingTypeComboBox]

Verify Default Value Of Product In Associated Charges
    ${assoc_charges_product}    Get Control Text Value    [NAME:AssociatedCharges_ProductCombobox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_product}'!='-- Select Product --'    FAIL    Incorrect Default Value

Verify Default Value Of Reason For Issue In Request Tab For Both Air BSp Or Air Domestic Products
    ${reason_for_issue}    Get Control Text Value    [NAME:ReasonForIssueComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${reason_for_issue}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${reason_for_issue}

Verify Default Value Of Remark In Request Tab For Both Air BSp Or Air Domestic Products
    ${remark}    Get Control Text Value    [NAME:RemarkTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${remark}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${remark}

Verify Default Value Of Request VMPD Checkbox In Request Tab For Both Air BSp Or Air Domestic Products
    ${request_vmpd_status}    Get Checkbox Status    [NAME:RequestVMPDCheckbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${request_vmpd_status.lower()}'!='false'    FAIL    Incorrect Default Value

Verify Default Value Of Request When Product Is Car Intl Or Car Dom
    ${car_segment}    Get Control Text Value    [NAME:CarSegmentsComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${car_segment}'!='-- Select a segment --'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Verify Default Value Of Date    [NAME:PickupDateDatePicker]
    Run Keyword And Continue On Failure    Verify Default Value Of Date    [NAME:DropOffDateDatePicker]
    Get Daily Rate
    Get Daily Rate Amount
    Get Pickup Location
    Get DropOff Location
    Get Company
    Get Confirmation Number
    Get Car Type
    Get Cancel By Radio Button Status
    Get Cancel By UOM
    Get Guarantee By
    Run Keyword And Continue On Failure    Run Keyword If    '${daily_rate}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${daily_rate_amount}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${pick_up_location}'!='Airport'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${dropoff_location}'!='Airport'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${company}'!='-- Select --'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${confirmation_number}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${car_type}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${cancel_by_status}'!='True'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${cancel_by_uom}'!='Hrs'    FAIL    Incorrect Default Value
    Run Keyword If    '${guarantee_by}'=='Credit Card'    Verify Default Values Of Credit Card In Request
    ...    ELSE IF    '${guarantee_by}'!='-- Select --'    FAIL    Incorrect Default Value

Verify Default Value Of Request When Product Is Hotel Prepaid
    Get Air Segment
    Get Hotel Segment Value
    Comment    Get Hotel Segment
    Get City Code
    Get Number Of People
    Get Room Type
    Get Hotel Name
    Get City For Hotel
    Comment    Get City
    Get Daily Rate
    Get Daily Rate Amount
    Get Guarantee By
    Get Cancel By Radio Button Status
    Comment    Verify Default Value Of Date    [NAME:Request_CheckinDateDatePicker]
    Comment    Verify Default Value Of Date    [NAME:Request_CheckoutDateDatePicker]
    Run Keyword And Continue On Failure    Run Keyword If    '${air_segment}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${hotel_segment}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${city_code}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${number_of_people}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${room_type}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${hotel_name}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${city_name}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${daily_rate}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${daily_rate_amount}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword If    '${guarantee_by}'=='Credit Card'    Verify Default Values Of Credit Card In Request
    ...    ELSE IF    '${guarantee_by}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Run Keyword If    '${cancel_by_status}'!='True'    FAIL    Incorrect Default Value

Verify Default Value Of Select All Segments Checkbox In Request Tab For Both Air BSp Or Air Domestic Products
    ${select_all_segments_checkbox_status}    Get Checkbox Status    [NAME:SelectAllCheckBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${select_all_segments_checkbox_status.lower()}'!='false'    FAIL    Incorrect Default Value

Verify Default Value Of Start Date In Request When Product Is Tour Intl
    ${default_date_x}    Get Control Text    [NAME:StartDateDatePicker]
    ${default_date}    Get From List    ${default_date_x}    0
    ${default_date}    Evaluate    str("${default_date}")
    ${date}=    DateTime.Get Current Date    result_format=datetime
    ${date}=    Convert Date    ${date}    result_format=%d/%b/%Y
    Run Keyword And Continue On Failure    Should Be Equal    ${date}    ${default_date.strip()}

Verify Default Value Of Taxes In Request Tab For Both Air BSp Or Air Domestic Products
    ${taxes}    Get Control Text Value    [NAME:TaxesTextbox]
    Run Keyword And Continue On Failure    Run Keyword If    '${taxes}'!='${EMPTY}'    FAIL    Incorrect Default Value
    Set Test Variable    ${taxes}

Verify Default Value Of Total Selling Price In Associated Charges
    ${assoc_charges_total_selling_price}    Get Control Text Value    [NAME:AssociatedCharges_DiSellingPriceTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_total_selling_price}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of VAT/GST Amount In Associated Charges
    ${assoc_charges_vatgst_amount}    Get Control Text Value    [NAME:AssociatedCharges_GSTTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_vatgst_amount}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Validity
    ${validity}    Get Control Text Value    [NAME:ValidityTextBox1]
    Run Keyword And Continue On Failure    Run Keyword If    "${validity}"!="${EMPTY}"    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Verify Control Object Is Disabled    [NAME:ValidityTextBox1]

Verify Default Value Of Validity Custom Field
    ${validity}    Get Control Text Value    [NAME:ValidityTextBox2]
    Run Keyword And Continue On Failure    Run Keyword If    "${validity}"!="${EMPTY}"    FAIL    Incorrect Default Value

Verify Default Value Of Validity UOM
    ${validity_uom}    Get Control Text Value    [NAME:ValidityComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${validity_uom}"!="Days"    FAIL    Incorrect Default Value
    Run Keyword And Continue On Failure    Verify Control Object Is Disabled    [NAME:ValidityComboBox]

Verify Default Value Of Vendor In Associated Charges
    ${assoc_charges_vendor}    Get Control Text Value    [NAME:AssociatedCharges_VendorComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_vendor}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Value Of Vendor Reference No (GSA) In Associated Charges
    ${assoc_charges_vendor_ref_no}    Get Control Text Value    [NAME:AssociatedCharges_VendorReferenceNoTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    '${assoc_charges_vendor_ref_no}'!='${EMPTY}'    FAIL    Incorrect Default Value

Verify Default Values Of All Fields In Vendor Info Tab
    Run Keyword And Continue On Failure    Get Fields From Vendor Info Tab
    Run Keyword And Continue On Failure    Verify Default Value Of Attention In Vendor Info Tab
    Run Keyword And Continue On Failure    Verify Default Value Of Contact Type In Vendor Info Tab
    Run Keyword And Continue On Failure    Verify Default Value Of Prefer CheckBox In Vendor Info Tab
    Run Keyword And Continue On Failure    Verify Prepopulated Default Value In Vendor Info tab

Verify Default Values Of Associated Charges Fields
    Verify Default Value Of Product In Associated Charges
    Verify Default Value Of Vendor In Associated Charges
    Verify Default Value Of Cost Amount In Associated Charges
    Verify Default Value Of Commission In Associated Charges
    Verify Default Value Of Discount In Associated Charges
    Verify Default Value Of Gross Sell In Associated Charges
    Verify Default Value Of VAT/GST Amount In Associated Charges
    Verify Default Value Of Merchant Fee In Associated Charges
    Verify Default Value Of Total Selling Price In Associated Charges
    Verify Default Value Of Description In Associated Charges On Load Of Tab
    Verify Default Value Of CWT Reference No (TK) In Associated Charges
    Verify Default Value Of Vendor Reference No (GSA) In Associated Charges
    Verify Default Value Of Other Related No (PO) In Associated Charges

Verify Default Values Of Fields In Request
    Verify Default Value Of Date In Request
    Verify Default Value Of City In Request
    Verify Default Value Of Locations In Request
    Verify Default Value Of Internal Remarks In Request

Verify Default Values Of Form Of Payment Details In Associated Charges
    [Arguments]    ${fop_type}
    Run Keyword And Continue On Failure    Run Keyword If    '${fop_type.lower()}'=='credit card'    Verify Default Values Of Form Of Payment Details In Associated Charges When FOP Is Credit Card
    ...    ELSE IF    '${fop_type.lower()}'=='cash'    Verify Default Values Of Form Of Payment Details In Associated Charges When FOP Is Cash

Verify Default Values Of Form Of Payment Details In Associated Charges When FOP Is Cash
    ${fop_type}    Get Control Text Value    [NAME:AssociatedCharges_FormOfPaymentComboBox]
    ${fop_type}    Convert To Lowercase    ${fop_type}
    Run Keyword And Continue On Failure    Should Be Equal    ${fop_type}    btc

Verify Default Values Of Form Of Payment Details In Associated Charges When FOP Is Credit Card
    ${pnr_rtf}    Get Clipboard Data Amadeus    RTF
    ${fp_line}    Get Lines Using Regexp    ${pnr_rtf}    \\d+\\sFP\\s.\*
    ${pnr_fp_line}    Fetch From Right    ${fp_line}    FP
    Log    ${pnr_fp_line}
    Set Test Variable    ${pnr_fp_line}
    @{splitted_lines}    Split String    ${pnr_fp_line}    /
    ${credit_card}    Get From List    ${splitted_lines}    0
    ${expiration}    Get From List    ${splitted_lines}    1
    ${pnr_cc_type}    Get Substring    ${credit_card}    0    2
    ${pnr_card_number}    Get Substring    ${credit_card}    2
    ${pnr_expiry_month}    Get Substring    ${expiration}    0    2
    ${pnr_expiry_year}    Get Substring    ${expiration}    2
    Verify Default Value Of Form Of Payment In Associated Charges When FP Line Is Credit Card
    Verify Default Value Of CC Type In Associated Charges    ${pnr_cc_type}
    Verify Default Value Of Card Number In Associated Charges    ${pnr_card_number}
    Verify Default Value Of Expiry Month In Associated Charges    ${pnr_expiry_month}
    Verify Default Value Of Expiry Year In Associated Charges    ${pnr_expiry_year}

Verify Default Values Of Request Tab Fields When Product Is Air BSp Or Air Domestic
    Verify Default Value Of Select All Segments Checkbox In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Plating Carrier
    Verify Default Value Of Fare Type In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Request VMPD Checkbox In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of PNR In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Reason For Issue In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Fare In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Headline Currency In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Taxes In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Equivalent Amt Paid In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of FOP In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of CC Type In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of CC Number In Request Tab For Both Air BSp Or Air Domestic Products
    Comment    Verify Default Value Of Exp Date In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Issue In Exchange For In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of In Conjunction With In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Original Place Of Issue in Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Remark In Request Tab For Both Air BSp Or Air Domestic Products

Verify Default Values Of Request Tab Fields When Product is Air BSp Or Air Domestic And VMPD Checkox Is Unchecked
    Verify Default Value Of Request VMPD Checkbox In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of PNR In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Reason For Issue In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Fare In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Headline Currency In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Taxes In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Equivalent Amt Paid In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of FOP In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of CC Type In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of CC Number In Request Tab For Both Air BSp Or Air Domestic Products
    Comment    Verify Default Value Of Exp Date In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Issue In Exchange For In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of In Conjunction With In Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Original Place Of Issue in Request Tab For Both Air BSp Or Air Domestic Products
    Verify Default Value Of Remark In Request Tab For Both Air BSp Or Air Domestic Products

Verify Description Value From Additional Information Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    Get Description From Additional Information
    Verify Actual Value Matches Expected Value    ${description}    ${expected_value}
    Take Screenshot

Verify Discount Calculation Is Correct
    [Arguments]    ${identifier}
    ${calculated_discount}    Convert To String    ${calculated_discount}
    Run Keyword And Continue On Failure    Should Be Equal    ${calculated_discount}    ${${identifier}_discount}

Verify Discount Computation In Associated Charges
    ${compute_discount}    Evaluate    ((${cost_amount} + ${commission_amount}) * ${assoc_charges_discount}* 0.01)
    ${compute_discount}    Round Off    ${compute_discount}
    ${compute_discount}    Set Test Variable    ${compute_discount}

Verify Displayed Fields In Form Of Payment Details In Associated Charges Depending On FP Line
    Get Form Of Payment In The PNR
    Run Keyword And Continue On Failure    Run Keyword If    "${fop_type.lower()}" != "cash" and "${fop_type.lower()}" != "${EMPTY}"    Verify Form Of Payment Details Displayed For Credit Card In Associated Charges
    ...    ELSE    Verify Form Of Payment Details Displayed For BTC In Associated Charges

Verify Email Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    EmailTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Error Icon For Address In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    446
    Set Test Variable    ${ypos}    583
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${address_length}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For Attention In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    446
    Set Test Variable    ${ypos}    495
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${attention_length}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For City In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    282
    Set Test Variable    ${ypos}    632
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${city_length}>50    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For Contact Type In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    791
    Set Test Variable    ${ypos}    495
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    "${contact_type}"=="-- Select Contact Type --"    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For Country In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    446
    Set Test Variable    ${ypos}    631
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${country_length}>50    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For Details In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    791
    Set Test Variable    ${ypos}    535
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${details_legth}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For Email In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    446
    Set Test Variable    ${ypos}    671
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${cwt_email_length}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon For Internal Remarks Field In Request Tab For Product Meet & Greet
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    547
    Set Test Variable    ${ypos}    628
    Activate Power Express Window
    ${internal_remarks_length}    Get Control Text Value    [NAME:LocationsTextBox]
    ${internal_remarks_length}    Get Length    ${internal_remarks_length}
    ${actual_tooltip_text}    Run Keyword If    ${internal_remarks_length}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail
    [Teardown]    Take Screenshot

Verify Error Icon For Locations Field In Request Tab For Product Meet & Greet
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    546
    Set Test Variable    ${ypos}    543
    Activate Power Express Window
    ${locations_length}    Get Control Text Value    [NAME:LocationsTextBox]
    ${locations_length}    Get Length    ${locations_length}
    ${actual_tooltip_text}    Run Keyword If    ${locations_length}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail

Verify Error Icon For Phone In Vendor Info tab
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    447
    Set Test Variable    ${ypos}    711
    Activate Power Express Window
    ${actual_tooltip_text}    Run Keyword If    ${cwt_phone_length}>100    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Run Keyword If    "${expected_tooltip_text}"=="${actual_tooltip_text}"    Log    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"
    ...    ELSE    Fail    No Error Icon

Verify Error Icon Is Displayed Beside CC Number For In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    257
    Set Test Variable    ${ypos}    522
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Commission In Associated Charges When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    532
    Set Test Variable    ${ypos}    523
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Cost Amount In Associated Charges When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    257
    Set Test Variable    ${ypos}    522
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Discount In Associated Charges When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    393
    Set Test Variable    ${ypos}    521
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Equivalent Amt Paid In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    257
    Set Test Variable    ${ypos}    522
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Fare In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    634
    Set Test Variable    ${ypos}    520
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside In Conjunction With In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    257
    Set Test Variable    ${ypos}    522
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Issue In Exchange For In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    634
    Set Test Variable    ${ypos}    520
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Original Place Of Issue In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    257
    Set Test Variable    ${ypos}    522
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Other Related No (PO) In Associated Charges When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    #update
    Set Test Variable    ${ypos}    #update
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Remark In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    257
    Set Test Variable    ${ypos}    522
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Taxes In Request Tab When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    634
    Set Test Variable    ${ypos}    520
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Icon Is Displayed Beside Textboxes In Vendor Tab
    Run Keyword And Continue On Failure    Verify Error Icon For Attention In Vendor Info tab    Should not be more than 100 characters
    Run Keyword And Continue On Failure    Verify Error Icon For Address In Vendor Info tab    Should not be more than 100 characters
    Run Keyword And Continue On Failure    Verify Error Icon For City In Vendor Info tab    Should not be more than 50 characters
    Run Keyword And Continue On Failure    Verify Error Icon For Country In Vendor Info tab    Should not be more than 50 characters
    Run Keyword And Continue On Failure    Verify Error Icon For Email In Vendor Info tab    Should not be more than 100 characters
    Run Keyword And Continue On Failure    Verify Error Icon For Phone In Vendor Info tab    Should not be more than 100 characters

Verify Error Icon Is Displayed Beside Vendor Reference No (GSA) In Associated Charges When Invalid Value Is Entered
    [Arguments]    ${expected_tooltip_text}
    Set Test Variable    ${xpos}    #update
    Set Test Variable    ${ypos}    #update
    Activate Power Express Window
    ${actual_tooltip_text}    Get Tooltip Text    ${xpos}    ${ypos}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tooltip_text}    ${actual_tooltip_text}    Expected tooltip "${expected_tooltip_text}" should be equal to actual tooltip "${actual_tooltip_text}"    False

Verify Error Message Is Displayed
    Wait Until Window Exists    Error
    Win Activate    Error    ${EMPTY}
    ${is_window_active} =    Win Active    Error    ${EMPTY}
    ${window_text}    Win Get Text    Error    ${EMPTY}
    Log    ${window_text}
    Log    ${is_window_active}
    Run Keyword If    ${is_window_active} != 1    FAIL
    ...    ELSE    Log    PASSED: ${window_text} error message is displayed

Verify Exact Remark Is Written In The PNR
    [Arguments]    ${expected_line_in_regex}
    ${line_containing_expected_value} =    Get Lines Using Regexp    ${pnr_details}    ${expected_line_in_regex}
    @{split_lines}    Split To Lines    ${line_containing_expected_value}
    ${length}    Get Length    ${split_lines}
    Comment    ${actual_line_count}    Get Line Count    ${line_containing_expected_value}
    Comment    Run Keyword If    '${expected_line_count}'=='${actual_line_count}'    Run Keyword And Continue On Failure    Should Match Regexp    ${split_lines[-1]}    (\\d+) ${expected_line_in_regex}$
    ...    ELSE    Run Keyword And Continue On Failure    Fail    Expected: ${expected_line_count}!= Actual: ${actual_line_count}
    Run Keyword If    '${length}'!='0'    Run Keyword And Continue On Failure    Should Match Regexp    ${split_lines[-1]}    (\\d+) ${expected_line_in_regex}$
    ...    ELSE    Run Keyword And Continue On Failure    Fail    Lines do not match

Verify Exchange Order Format
    [Arguments]    ${mk}
    Get Exchange Order Number
    ${date}=    DateTime.Get Current Date    result_format=%Y%m
    Set Test Variable    ${date}    ${date[2:]}
    Should Match Regexp    ${eo_number}    ${date}${mk}\\\d{5}$    msg=EO does not match

Verify Exchange Order Number Is Retained
    [Arguments]    ${exp_eo_number}
    Verify Actual Value Matches Expected Value    ${eo_number}    ${exp_eo_number}
    Take Screenshot

Verify Exchange Order Record Is Displayed In The EO Grid
    [Arguments]    ${product_id}
    ${eo_collection}    Get All Record In Exchange Order Grid
    : FOR    ${eo_data}    IN    @{eo_collection}
    \    ${expected_eo_collection}    Evaluate    [expected_eo.lower() for expected_eo in ${eo_number_collection_${product_id.lower()}}]    #Expected Data converts to lower case
    \    ${actual_eo_collection}    Evaluate    [actual_eo.lower() for actual_eo in ${eo_data}]    #Actual Data converts to lower case
    \    ${actual_eo_collection}    Remove String From List    ${actual_eo_collection}    system.drawing.bitmap
    \    Log List    ${expected_eo_collection}
    \    Log List    ${actual_eo_collection}
    \    ${is_correct}    Run Keyword And Return Status    Lists Should Be Equal    ${actual_eo_collection}    ${expected_eo_collection}
    \    Exit For Loop If    "${is_correct}" == "True"
    Verify Actual Value Matches Expected Value    ${is_correct}    True
    Comment    Comment    @{eo_data}    Get All Cell Values In Data Grid Table    [NAME:EoGrid]
    Comment    Comment    @{eo_data}    Split String    ${eo_data[1]}    ;
    Comment    Comment    ${eo_data}    Remove String From List    ${eo_data}    System.Drawing.Bitmap
    Comment    Comment    Lists Should Be Equal    ${eo_data}    ${eo_number_collection_${product_id}}
    Comment    Comment    Set Suite Variable    ${eo_data}
    Set Suite Variable    ${actual_eo_collection}

Verify Exchange Order Remarks Item Is Deleted In Right Grid View
    [Arguments]    ${index}
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    Should Be Empty    ${get_values}

Verify Expiry Date In Request Is Correct
    [Arguments]    ${actual_expiry_date}
    Get Expiry Date In Request Tab When Products Are Air BSp Or Air Domestic
    Run Keyword And Continue On Failure    Should Be Equal    ${actual_expiry_date}    ${exp_date}    PASSED: Values are equal

Verify FOP Details Are Correct
    [Arguments]    ${fop_value}    ${fop_cc_type}    ${fop_cc_number}    ${fop_expiry_mm}    ${fop_expiry_yyyy}
    [Documentation]    Ideal usage:
    ...
    ...    To verify a pre-population of FoP details in Other Services panel, you may use this keyword this way:
    ...    Verify FOP Details Are Correct Credit Card (CC) DC **********5904 12/25
    ...
    ...    To verify a pre-population of FoP details in Other Services panel after clicking the unmasked button, you may use this keyword this way:
    ...    Unmask Credit Card Number \ \ Verify FOP Details Are Correct Credit Card (CC) DC XXXXXXXXXX5904 12/25
    Verify FOP Details Are Correct For CC Or CX    ${fop_value}    ${fop_cc_type}    ${fop_cc_number}    ${fop_expiry_mm}    ${fop_expiry_yyyy}
    [Teardown]    Take Screenshot

Verify FOP Details Are Correct For CC Or CX
    [Arguments]    ${fop_value}    ${fop_cc_type}    ${fop_cc_number}    ${fop_expiry_mm}    ${fop_expiry_yyyy}
    Get Form Of Payment
    Get Card Vendor Type
    Get Card Number
    Get Expiry Month In Other Services
    Get Expiry Year In Other Services
    Utilities.Verify Actual Value Matches Expected Value    ${form_of_payment}    ${fop_value}
    Utilities.Verify Actual Value Matches Expected Value    ${card_vendor_type}    ${fop_cc_type}
    Utilities.Verify Actual Value Matches Expected Value    ${card_number}    ${fop_cc_number}
    Utilities.Verify Actual Value Matches Expected Value    ${expiry_month}    ${fop_expiry_mm}
    Utilities.Verify Actual Value Matches Expected Value    ${expiry_year}    ${fop_expiry_yyyy}
    [Teardown]    Take Screenshot

Verify FOP Details Are Not Visible
    Verify Control Object Is Not Visible    [placeholder - creditcardtype]    ${title_power_express}
    Verify Control Object Is Not Visible    [placeholder - creditcardnumber]    ${title_power_express}
    Verify Control Object Is Not Visible    [placeholder - expirydate]    ${title_power_express}

Verify FOP Details Are Visible and Mandatory
    Verify Control Object Is Visible    [NAME:FopVendorComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:FopVendorComboBox]
    Verify Control Object Is Visible    [NAME:valueMaskedTextBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:valueMaskedTextBox]
    Verify Control Object Is Visible    [NAME:ExpiryMonthComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:ExpiryMonthComboBox]
    Verify Control Object Is Visible    [NAME:ExpiryYearComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:ExpiryYearComboBox]

Verify FOP Info In Other Services
    Get Form Of Payment
    Run Keyword If    "${form_of_payment}" == "Credit Card (CC)" or "${form_of_payment}" == "Credit Card (CX)"    Verify FOP Details Are Visible and Mandatory
    ...    ELSE    Verify FOP Details Are Not Visible

Verify Fax No Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    FaxNumberTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Field Default Values In Request
    [Arguments]    ${product}
    Run Keyword If    "${product.lower()}"=="air bsp add on" or "${product.lower()}"=="air dom add on" or "${product.lower()}"=="air sales-non bsp int" or "${product.lower()}"=="air conso-dom"    Verify Field Default Values In Request When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT, Air Conso-Dom    ${product}
    Run Keyword If    "${product.lower()}"=="visa fee" or "${product.lower()}"=="visa dd" or "${product.lower()}"=="visa handling fee"    Verify Field Default Values In Request When Product Is Visa    ${product}
    Run Keyword If    "${product.lower()}"=="car intl" or "${product.lower()}"=="car dom"    Verify Default Value Of Request When Product Is Car Intl Or Car Dom
    Run Keyword If    "${product.lower()}"=="hotel prepaid intl" or "${product.lower()}"=="hotel prepaid dom"    Verify Default Value Of Request When Product Is Hotel Prepaid

Verify Field Default Values In Request When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT, Air Conso-Dom
    [Arguments]    ${product}
    Verify Default Value Of Plating Carrier
    Verify Value Of Fare Type    P
    Verify Value Of Tour Code    ${EMPTY}
    Verify Value Of Threshold Amount    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of PoS Remark 1    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of PoS Remark 2    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of PoS Remark 3    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Centralized Desk 1    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Centralized Desk 2    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Airlines    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Transaction Type    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Airlines PNR    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Fare Break Up 1    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Fare Break Up 2    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Cancellation Penalty    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of LCC Queue Back Remark    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of GSTIN    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Email    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Entity Name    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Value Of Phone No    ${EMPTY}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Airlines Dropdown Values
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Transaction Type Dropdown Values

Verify Field Default Values In Request When Product Is Tour Intl
    Verify Default Value Of Start Date In Request When Product Is Tour Intl
    Verify Default Value Of End Date In Request When Product Is Tour Intl
    Verify Default Value Of City In Request When Product Is Tour Intl
    Verify Default Value Of Package Name In Request When Product Is Tour Intl
    Verify Default Value Of Details In Request When Product Is Tour Intl
    Verify Default Value Of Internal Remarks In Request When Product Is Tour Intl

Verify Field Default Values In Request When Product Is Visa
    [Arguments]    ${product}
    [Documentation]    Use this keyword to populate Request tab for the following Products: Visa Fee, Visa DD and Visa Handling Fee
    Verify Default Value Of Document
    Verify Default Value Of Country
    Verify Default Value Of Doc Type
    Verify Default Value Of Date Of Application
    Verify Default Value Of Internal Remarks
    Verify Default Value Of Entries
    Verify Default Value Of Validity
    Verify Default Value Of Validity UOM
    Verify Default Value Of Processing Type
    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Default Value Of Demand Draft Required
    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Default Value Of Demand Draft Number
    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Default Value Of Validity Custom Field

Verify Field Properties of Visa Processing
    [Arguments]    ${fop}
    Verify FOP Info In Other Services
    Verify Control Object Field Is Mandatory    [NAME:CountryTextBox]
    Verify Control Object Field Is Mandatory    [NAME:TypeComboBox]
    Verify Control Object Field Is Mandatory    [NAME:EntriesComboBox]
    Comment    1001 is AutomationID for Validity Period
    Verify Control Object Field Is Mandatory    [NAME:1001]
    Verify Control Object Field Is Mandatory    [NAME:ProcessingComboBox]
    Verify Control Object Is Enabled    [NAME:VendorContactTextBox]
    Verify Control Object Is Enabled    [NAME:NetCostTextBox]
    Verify Control Object Is Enabled    [NAME:NetCostMerchantTextBox]
    Verify Control Object Is Enabled    [NAME:VendorHandlingTextBox]
    Verify Control Object Is Enabled    [NAME:CwtHandlingTextBox]
    Verify Control Object Is Enabled    [NAME:CwtHandlingMerchantTextBox]
    Verify Control Object Is Enabled    [NAME:SellingPriceTextBox]
    Comment    792666 is AutomationID for Validity Period
    Verify Control Object Is Enabled    [NAME:792666]
    Verify Control Object Is Enabled    [NAME:ProcessingDaysTextBox]
    Verify Control Object Is Enabled    [NAME:PassengerIdTextBox]
    Verify Control Object Is Disabled    [NAME:NetCostMerchantTextBox]
    Verify Control Object Is Disabled    [NAME:CwtHandlingMerchantTextBox]
    Verify Control Object Is Disabled    [NAME:CommissionTextBox]
    Verify Control Object Is Disabled    [NAME:DiSellingPriceTextBox]

Verify Field Values Except FOP In VMPD Info
    [Arguments]    ${reason_for_issue1}    ${fare1}    ${headline_currency1}    ${taxes1}    ${eqivalent_amt_paid1}    ${fop_type1}
    ...    ${issue_in_exchange_for1}    ${in_conjunction_with1}    ${original_place_of_issue1}    ${remark1}
    Verify Default Value Of Reason For Issue In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_reason_for_issue}    Set Variable    ${reason_for_issue1}
    Run Keyword And Continue On Failure    Should Be Equal    ${reason_for_issue}    ${expected_reason_for_issue}
    Verify Default Value Of Fare In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_fare}    Set Variable    ${fare1}
    Run Keyword And Continue On Failure    Should Be Equal    ${reason_for_issue}    ${expected_fare}
    Verify Default Value Of Headline Currency In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_headline_currency}    Set Variable    ${headline_currency1}
    Run Keyword And Continue On Failure    Should Be Equal    ${headline_currency}    ${expected_headline_currency}
    Verify Default Value Of Taxes In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_taxes}    Set Variable    ${taxes1}
    Run Keyword And Continue On Failure    Should Be Equal    ${taxes}    ${expected_taxes}
    Verify Default Value Of Equivalent Amt Paid In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_equivalent_amt_paid}    Set Variable    ${eqivalent_amt_paid1}
    Run Keyword And Continue On Failure    Should Be Equal    ${equivalent_amt_paid}    ${expected_equivalent_amt_paid}
    Verify Default Value Of FOP In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_fop}    Set Variable    ${fop_type1}
    Run Keyword And Continue On Failure    Should Be Equal    ${fop}    ${expected_fop}
    Verify Default Value Of Issue In Exchange For In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_issue_in_exchange_for}    Set Variable    ${issue_in_exchange_for1}
    Run Keyword And Continue On Failure    Should Be Equal    ${issue_in_exchange_for}    ${expected_issue_in_exchange_for}
    Verify Default Value Of In Conjunction With In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_in_conjunction_with}    Set Variable    ${in_conjunction_with1}
    Run Keyword And Continue On Failure    Should Be Equal    ${in_conjunction_with}    ${expected_in_conjunction_with}
    Verify Default Value Of Original Place Of Issue in Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_original_place_of_issue}    Set Variable    ${original_place_of_issue1}
    Run Keyword And Continue On Failure    Should Be Equal    ${original_place_of_issue}    ${expected_original_place_of_issue}
    Verify Default Value Of Remark In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_remark}    Set Variable    ${remark1}
    Run Keyword And Continue On Failure    Should Be Equal    ${remark}    ${expected_remark}

Verify Field Values For FOP In VMPD Info
    [Arguments]    ${reason_for_issue1}    ${fare1}    ${headline_currency1}    ${taxes1}    ${eqivalent_amt_paid1}    ${fop_type1}
    ...    ${cc_type1}    ${cc_number1}    ${exp_month1}    ${exp_year1}    ${issue_in_exchange_for1}    ${in_conjunction_with1}
    ...    ${original_place_of_issue1}    ${remark1}
    Verify Default Value Of Reason For Issue In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_reason_for_issue}    Set Variable    ${reason_for_issue1}
    Run Keyword And Continue On Failure    Should Be Equal    ${reason_for_issue}    ${expected_reason_for_issue}
    Verify Default Value Of Fare In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_fare}    Set Variable    ${fare1}
    Run Keyword And Continue On Failure    Should Be Equal    ${reason_for_issue}    ${expected_fare}
    Verify Default Value Of Headline Currency In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_headline_currency}    Set Variable    ${headline_currency1}
    Run Keyword And Continue On Failure    Should Be Equal    ${headline_currency}    ${expected_headline_currency}
    Verify Default Value Of Taxes In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_taxes}    Set Variable    ${taxes1}
    Run Keyword And Continue On Failure    Should Be Equal    ${taxes}    ${expected_taxes}
    Verify Default Value Of Equivalent Amt Paid In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_equivalent_amt_paid}    Set Variable    ${eqivalent_amt_paid1}
    Run Keyword And Continue On Failure    Should Be Equal    ${equivalent_amt_paid}    ${expected_equivalent_amt_paid}
    Verify Default Value Of FOP In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_fop}    Set Variable    ${fop_type1}
    Run Keyword And Continue On Failure    Should Be Equal    ${fop}    ${expected_fop}
    Verify Default Value Of CC Type In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_cc_type}    Set Variable    ${cc_type1}
    Run Keyword And Continue On Failure    Should Be Equal    ${cc_type}    ${expected_cc_type}
    Verify Default Value Of CC Number In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_reason_cc_number}    Set Variable    ${cc_number1}
    Run Keyword And Continue On Failure    Should Be Equal    ${cc_number}    ${expected_reason_cc_number}
    Verify Default Value Of Exp Date In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_cc_exp_date}    Set Variable    ${exp_month1}${exp_year1}
    Run Keyword And Continue On Failure    Should Be Equal    ${cc_exp_date}    ${expected_cc_exp_date}
    Verify Default Value Of Issue In Exchange For In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_issue_in_exchange_for}    Set Variable    ${issue_in_exchange_for1}
    Run Keyword And Continue On Failure    Should Be Equal    ${issue_in_exchange_for}    ${expected_issue_in_exchange_for}
    Verify Default Value Of In Conjunction With In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_in_conjunction_with}    Set Variable    ${in_conjunction_with1}
    Run Keyword And Continue On Failure    Should Be Equal    ${in_conjunction_with}    ${expected_in_conjunction_with}
    Verify Default Value Of Original Place Of Issue in Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_original_place_of_issue}    Set Variable    ${original_place_of_issue1}
    Run Keyword And Continue On Failure    Should Be Equal    ${original_place_of_issue}    ${expected_original_place_of_issue}
    Verify Default Value Of Remark In Request Tab For Both Air BSp Or Air Domestic Products
    ${expected_remark}    Set Variable    ${remark1}
    Run Keyword And Continue On Failure    Should Be Equal    ${remark}    ${expected_remark}

Verify Field Values In Request On Amend EO When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT
    [Arguments]    ${identifier_1}    ${identifier_2}
    Run Keyword And Continue On Failure    Should Be Equal    ${air_add_on_collection_${identifier_1}}    ${air_add_on_collection_${identifier_2}}

Verify Field Values In Request On Amend EO When Product Is Air Conso Dom
    [Arguments]    ${identifier_1}    ${identifier_2}
    Should Be Equal    ${air_add_on_collection_${identifier_1}}    ${air_add_on_collection_${identifier_2}}

Verify Field Values In Request On Amend EO When Product Is Any Air Add On
    [Arguments]    ${product}    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="air bsp add on" or "${product.lower()}"=="air dom add on" or "${product.lower()}"=="air sales-non bsp int" or "${product.lower()}"=="air conso-dom"    Verify Field Values In Request On Amend EO When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT    ${identifier_1}    ${identifier_2}

Verify Field Values In Request On Amend EO When Product Is Any Air Product
    [Arguments]    ${product}    ${identifier1}    ${identifier2}
    Run Keyword If    "${product.lower()}"=="air bsp" or "${product.lower()}"=="air domestic"    Verify Request Tab Fields In Amend EO When Product Is Air Bsp Or Air DOmestic    ${identifier1}    ${identifier2}

Verify Field Values In Request On Amend EO When Product Is Car Intl Or Car Dom
    [Arguments]    ${identifier_1}    ${identifier_2}
    Log List    ${car_collection${identifier_1}}
    Log List    ${car_collection${identifier_2}}
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${car_collection${identifier_1}}    ${car_collection${identifier_2}}

Verify Field Values In Request On Amend EO When Product Is Hotel Prepaid-Inlt Or Hotel Prepaid-Dom
    [Arguments]    ${identifier_1}    ${identifier_2}
    Log List    ${hotel_prepaid_collection${identifier_1}}
    Log List    ${hotel_prepaid_collection${identifier_2}}
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${hotel_prepaid_collection${identifier_1}}    ${hotel_prepaid_collection${identifier_2}}

Verify Field Values In Request On Amend EO When Product Is Visa
    [Arguments]    ${identifier_1}    ${identifier_2}
    Log List    ${visa_collection${identifier_1}}
    Log List    ${visa_collection${identifier_2}}
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${visa_collection${identifier_1}}    ${visa_collection${identifier_2}}

Verify Field Values In Request On Amend When Product Is Meet & Greet
    [Arguments]    ${identifier_1}    ${identifier_2}
    Run Keyword And Continue On Failure    Should Be Equal    ${meet_&_greet_collection${identifier_1}}    ${meet_&_greet_collection${identifier_2}}

Verify Fields Are Displayed In Request
    [Arguments]    ${product}
    Run Keyword If    "${product.lower()}"=="air bsp add on" or "${product.lower()}"=="air dom add on" or "${product.lower()}"=="air sales-non bsp int"    Verify Fields Are Displayed In Request When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT, Air Conso-Dom    ${product}
    Run Keyword If    "${product.lower()}"=="visa fee" or "${product.lower()}"=="visa dd" or "${product.lower()}"=="visa handling fee"    Verify Fields Are Displayed In Request When Product Is Visa    ${product}
    Run Keyword If    "${product.lower()}"=="tour intl"    Verify Fields Are Displayed In Request When Product Is Tour Intl
    Run Keyword If    "${product.lower()}"=="despatch" or "${product.lower()}"=="ets call charges" or "${product.lower()}"=="ferry" or "${product.lower()}"=="merchant fee" or "${product.lower()}"=="mice domestic" or "${product.lower()}"=="mice international" or "${product.lower()}"=="oths handling fee" or "${product.lower()}"=="rebate" or "${product.lower()}"=="tour domestic" or "${product.lower()}"=="transaction fee-air only" or "${product.lower()}"=="vat"    Verify Fields Are Displayed In Request When Product Is Non-Air Other Services
    Run Keyword If    "${product.lower()}"=="car intl" or "${product.lower()}"=="car dom"    Verify Fields Are Displayed In Request When Product Is Car Intl Or Car Dom
    Run Keyword If    "${product.lower()}"=="hotel prepaid intl" or "${product.lower()}"=="hotel prepaid dom"    Verify Fields Are Displayed In Request When Product Is Hotel Prepaid
    Run Keyword If    "${product.lower()}"=="insurance"    Verify Fields Are Displayed in Request When Product Is Insurance

Verify Fields Are Displayed In Request When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT, Air Conso-Dom
    [Arguments]    ${product}
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:SegmentListView]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:SelectAllCheckBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PlatingCarrierComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:FareTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:TourCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ThresholdAmountTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PosRemark1TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PosRemark2TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PosRemark3TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CentralizedDesk1TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CentralizedDesk2TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AirLinesComboBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:TransactionTypeComboBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AirlinesPnrTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:FareBreakUp1TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:FareBreakUp2TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CancellationPenaltyTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:LccQueueBackRemarkTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:GsTinTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EmailTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EntityNameTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PhoneNoTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Airlines Dropdown Values
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Transaction Type Dropdown Values

Verify Fields Are Displayed In Request When Product Is Air Conso Dom
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:SegmentListView]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:SelectAllCheckBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PlatingCarrierComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:FareTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:TourCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ThresholdAmountTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PosRemark1TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PosRemark2TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PosRemark3TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CentralizedDesk1TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CentralizedDesk2TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AirLinesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:TransactionTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AirlinesPnrTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:FareBreakUp1TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:FareBreakUp2TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CancellationPenaltyTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:LccQueueBackRemarkTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:GsTinTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EmailTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EntityNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PhoneNoTextBox]
    Run Keyword And Continue On Failure    Verify Airlines Dropdown Values
    Run Keyword And Continue On Failure    Verify Transaction Type Dropdown Values

Verify Fields Are Displayed In Request When Product Is Car Intl Or Car Dom
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CarSegmentsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [Name:PickupDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:TimePickerControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DropOffDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DropOffTimePicker]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PickUpLocationsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DropOffLocationsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CompaniesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:NameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ConfirmationNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CarTypeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:GuaranteedByComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DescriptionTextBox]
    Verify Daily Rate Fields Are Displayed
    Get Guarantee By
    Run Keyword If    '${guarantee_by.lower()}'=='credit card'    Verify Credit Card Fields Are Displayed
    Verify Cancellation Policy Fields Are Displayed

Verify Fields Are Displayed In Request When Product Is Hotel Prepaid
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_AirSegmentsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_HotelSegmentsCombobox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CityCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CheckinDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CheckoutDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_NumberOfPeopleTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_RoomTypeCombobox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_HotelNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_HotelAddressTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CityNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_StateOrProvinceTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_PostalCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_PhoneNumberTexBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_DailyRateCurrencyComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_DailyRateAmountTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_ConfirmationNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_GuaranteedByComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_InternalRemarksTextBox]
    Get Guarantee By
    Run Keyword If    '${guarantee_by.lower()}'=='credit card'    Verify Credit Card Fields Are Displayed
    Verify Cancellation Policy Fields Are Displayed

Verify Fields Are Displayed In Request When Product Is Meet And Greet
    Verify Control Object Is Visible    [NAME:DateLabel]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:TimeLabel]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:CityLabel]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:LocationsLabel]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:InternalRemarksLabel]    ${title_power_express}

Verify Fields Are Displayed In Request When Product Is Tour Intl
    Wait Until Control Object Is Visible    [NAME:OtherServicesTourInformationControl]
    Verify Control Object Is Visible    [NAME:StartDateDatePicker]
    Verify Control Object Is Visible    [NAME:EndDateDatePicker]
    Verify Control Object Is Visible    [NAME:CityComboBox]
    Verify Control Object Is Visible    [NAME:PackageNameTextBox]
    Verify Control Object Is Visible    [NAME:DetailsTextBox]
    Verify Control Object Is Visible    [NAME:InternalRemarksTextBox]

Verify Fields Are Displayed In Request When Product Is Visa
    [Arguments]    ${product}
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DocumentComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EntriesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CountryComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ValidityTextBox1]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ValidityComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DocTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ProcessingTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DateOfApplicationTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:InternalRemarksTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Control Object Is Visible    [NAME:DemandDraftRequiredComboBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Control Object Is Visible    [NAME:DemandDraftNumberTextBox]
    Run Keyword And Continue On Failure    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Control Object Is Visible    [NAME:ValidityTextBox2]

Verify Fields Are Mandatory In Request
    [Arguments]    ${product}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Fields Are Mandatory In Request When Product Is Air Conso-Dom
    Run Keyword If    "${product.lower()}"=="tour intl"    Verify Fields Are Mandatory In Request When Product Is Tour Intl
    Run Keyword If    "${product.lower()}"=="despatch" or "${product.lower()}"=="ets call charges" or "${product.lower()}"=="ferry" or "${product.lower()}"=="merchant fee" or "${product.lower()}"=="mice domestic" or "${product.lower()}"=="mice international" or "${product.lower()}"=="oths handling fee" or "${product.lower()}"=="rebate" or "${product.lower()}"=="tour domestic" or "${product.lower()}"=="transaction fee-air only" or "${product.lower()}"=="vat"    Verify Fields Are Mandatory In Request When Product Is Non-Air Other Services
    Run Keyword If    "${product.lower()}"=="visa fee" or "${product.lower()}"=="visa dd" or "${product.lower()}"=="visa handling fee"    Verify Fields Are Mandatory In Request When Product Is Visa    ${product}
    Run Keyword If    "${product.lower()}"=="car intl" or "${product.lower()}"=="car dom"    Verify Fields Are Mandatory In Request When Product Is Car Intl Or Car Dom
    Run Keyword If    "${product.lower()}"=="hotel prepaid intl" or "${product.lower()}"=="hotel prepaid dom"    Verify Fields Are Mandatory In Request When Product Is Hotel Prepaid
    Run Keyword If    "${product.lower()}"=="insurance"    Verify Fields Are Mandatory In Request When Product Is Insurance

Verify Fields Are Mandatory In Request When Product Is Air Conso-Dom
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AirLinesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:TransactionTypeComboBox]

Verify Fields Are Mandatory In Request When Product Is Car Intl Or Car Dom
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:CarSegmentsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:CompaniesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:DailyRateCurrencyComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:DailyRateAmountTextBox]
    Get Guarantee By
    Run Keyword And Continue On Failure    Run Keyword If    '${guarantee_by}'!='Credit Card'    Verify Control Object Field Is Mandatory    [NAME:GuaranteedByComboBox]
    ...    ELSE    Verify Control Object Field Is Mandatory    [NAME:CreditCardPreferenceComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:CancelByAmountTextBox]
    Click Control Button    [NAME:OthersRadioButton]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:CancelByOthersDescriptionTextBox]
    Click Control Button    [NAME:CancelByRadioButton]

Verify Fields Are Mandatory In Request When Product Is Hotel Prepaid
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_HotelSegmentsCombobox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_CityCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_NumberOfPeopleTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_RoomTypeCombobox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_HotelNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_CityNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_DailyRateCurrencyComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_DailyRateAmountTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_ConfirmationNumberTextBox]
    Get Guarantee By
    Run Keyword And Continue On Failure    Run Keyword If    '${guarantee_by}'!='Credit Card'    Verify Control Object Field Is Mandatory    [NAME:Request_GuaranteedByComboBox]
    ...    ELSE    Verify Control Object Field Is Mandatory    [NAME:Request_CreditCardPreferenceComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_CancelByAmountTextBox]
    Click Control Button    [NAME:Request_OthersRadioButton]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Request_CancelByOthersDescriptionTextBox]
    Click Control Button    [NAME:Request_CancelByRadioButton]

Verify Fields Are Mandatory In Request When Product Is Meet And Greet
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:CityComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:LocationsTextBox]
    Take Screenshot

Verify Fields Are Mandatory In Request When Product Is Tour Intl
    Verify Control Object Field Is Mandatory    [NAME:CityComboBox]
    Verify Control Object Field Is Mandatory    [NAME:PackageNameTextBox]

Verify Fields Are Mandatory In Request When Product Is Visa
    [Arguments]    ${product}
    [Documentation]    Use this keyword to verify optional and mandatory fields in Request tab for the following Products: Visa Fee, Visa DD or Visa Handling Fee
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    #Country
    Select Country In Request    ${EMPTY}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:CountryComboBox]
    #Validity
    Select Document    Visa
    Set Validity    ${EMPTY}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:ValidityTextBox1]
    Run Keyword And Continue On Failure    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Custom Fields Are Mandatory When Product Is Visa

Verify Fields Are Optional In Request
    [Arguments]    ${product}
    Run Keyword If    "${product.lower()}"=="air bsp add on" or "${product.lower()}"=="air dom add on" or "${product.lower()}"=="air sales-non bsp int" or "${product.lower()}"=="air conso-dom"    Verify Fields Are Optional In Request When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT, Air Conso-Dom    ${product}
    Run Keyword If    "${product.lower()}"=="tour intl"    Verify Fields Are Optional In Request When Product Is Tour Intl
    Run Keyword If    "${product.lower()}"=="despatch" or "${product.lower()}"=="ets call charges" or "${product.lower()}"=="ferry" or "${product.lower()}"=="merchant fee" or "${product.lower()}"=="mice domestic" or "${product.lower()}"=="mice international" or "${product.lower()}"=="oths handling fee" or "${product.lower()}"=="rebate" or "${product.lower()}"=="tour domestic" or "${product.lower()}"=="transaction fee-air only" or "${product.lower()}"=="vat"    Verify Request Fields Are Optional In Request When Product Is Non-Air Other Services
    Run Keyword If    "${product.lower()}"=="visa fee" or "${product.lower()}"=="visa dd" or "${product.lower()}"=="visa handling fee"    Verify Fields Are Optional In Request When Product Is Visa    ${product}
    Run Keyword If    "${product.lower()}"=="car intl" or "${product.lower()}"=="car dom"    Verify Fields Are Optional In Request When Product Is Car Intl Or Car Dom
    Run Keyword If    "${product.lower()}"=="hotel prepaid intl" or "${product.lower()}"=="hotel prepaid dom"    Verify Fields Are Optional In Request When Product Is Hotel Prepaid
    Run Keyword If    "${product.lower()}"=="insurance"    Verify Fields Are Optional In Request When Product Is Insurance

Verify Fields Are Optional In Request When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT, Air Conso-Dom
    [Arguments]    ${product}
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:SelectAllCheckBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PlatingCarrierComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:FareTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:TourCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ThresholdAmountTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PosRemark1TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PosRemark2TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PosRemark3TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CentralizedDesk1TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CentralizedDesk2TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AirlinesPnrTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:FareBreakUp1TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:FareBreakUp2TextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CancellationPenaltyTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:LccQueueBackRemarkTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:GsTinTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:EmailTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:EntityNameTextBox]
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PhoneNoTextBox]

Verify Fields Are Optional In Request When Product Is Car Intl Or Car Dom
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [Name:PickupDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:TimePickerControl]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PickUpLocationsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PickupLocationTextTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DropOffDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DropOffLocationsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DropOffTimePicker]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DropOffLocationTextTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:NameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ConfirmationNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CarTypeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:SelectedCancelByTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DescriptionTextBox]

Verify Fields Are Optional In Request When Product Is Hotel Prepaid
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_AirSegmentsComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_CheckinDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_CheckoutDateDatePicker]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_HotelAddressTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_StateOrProvinceTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_PostalCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_PhoneNumberTexBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Request_InternalRemarksTextBox]

Verify Fields Are Optional In Request When Product Is Tour Intl
    Verify Control Object Field Is Not Mandatory    [NAME:StartDateDatePicker]
    Verify Control Object Field Is Not Mandatory    [NAME:EndDateDatePicker]
    Verify Control Object Field Is Not Mandatory    [NAME:DetailsTextBox]
    Verify Control Object Field Is Not Mandatory    [NAME:InternalRemarksTextBox]

Verify Fields Are Optional In Request When Product Is Visa
    [Arguments]    ${product}
    [Documentation]    Use this keyword to verify optional and mandatory fields in Request tab for the following Products: Visa Fee, Visa DD or Visa Handling Fee
    #Date of Application
    Select Date Of Application    ${EMPTY}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DateOfApplicationTextBox]
    #Internal Remarks
    Set Internal Remarks    ${EMPTY}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:InternalRemarksTextBox]
    #Custom Fields
    Run Keyword And Continue On Failure    Run Keyword If    "${product.lower()}"=="visa handling fee"    Verify Custom Fields Are Optional When Product Is Visa Handling Fee

Verify Fields Are Optional In Vendor Tab
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AttentionTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AddressTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:EmailTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ContactNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CityTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CountryTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ContactTypeComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DetailsTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PreferCheckBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:VendorComboBox]

Verify Fields Are Pre-populated After Selecting A Hotel Segment
    [Arguments]    ${checkin_date_identifier}    ${checkout_date_identifier}    ${daily_rate}    ${daily_rate_amount}    ${number_of_people}    ${city_code}
    ...    ${hotel_name}
    [Documentation]    Enter same identifier as the one in Book Active/Passive Segment X Months From Now
    Verify Checkin Date Is Correct    ${checkin_date${checkin_date_identifier}}
    Verify Checkout Date Is Correct    ${checkout_date${checkout_date_identifier}}
    Verify Daily Rate Is Correct    ${daily_rate}
    Verify Amount Is Correct    ${daily_rate_amount}
    Verify Number Of People Is Correct    ${number_of_people}
    Verify City Code Is Correct    ${city_code}
    Verify Hotel Name Is Correct    ${hotel_name}

Verify Fields Are Pre-populated After Selecting A Passive Hotel Segment
    [Arguments]    ${checkin_date_identifier}    ${checkout_date_identifier}    ${daily_rate}    ${daily_rate_amount}    ${number_of_people}    ${city_code}
    ...    ${hotel_name}
    [Documentation]    Enter same identifier as the one in Book Active/Passive Segment X Months From Now
    Comment    Verify Checkin Date Is Correct    ${checkin_date${checkin_date_identifier}}
    Comment    Verify Checkout Date Is Correct    ${checkout_date${checkout_date_identifier}}
    Comment    Verify Daily Rate Is Correct    ${daily_rate}
    Comment    Verify Amount Is Correct    ${daily_rate_amount}
    Verify Number Of People Is Correct    ${number_of_people}
    Verify City Code Is Correct    ${city_code}
    Verify Hotel Name Is Correct    ${hotel_name}

Verify Form Of Payment Details Are Correct
    [Arguments]    ${fop_value}    ${vendor}=${Empty}    ${cc_number}=${Empty}    ${exp_month}=${Empty}    ${exp_year}=${Empty}
    Get FOP Value
    Verify Actual Value Matches Expected Value    ${form_of_payment}    ${fop_value}
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Get FOP Vendor Value
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Get Credit Card Value
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Get Expiry Month Value
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Get Expiry Year Value
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Verify Actual Value Matches Expected Value    ${form_of_payment_vendor}    ${vendor}
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Verify Actual Value Matches Expected Value    ${credit_card_number}    ${cc_number}
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Verify Actual Value Matches Expected Value    ${expiry_month}    ${exp_month}
    Run Keyword If    '${form_of_payment.lower()}' !='cash or invoice'    Verify Actual Value Matches Expected Value    ${expiry_year}    ${exp_year}

Verify Form Of Payment Details Displayed For BTC In Associated Charges
    Verify Control Object Is Visible    [NAME:AssociatedCharges_FormOfPaymentComboBox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_FormOfPaymentComboBox]
    Verify Control Object Is Not Visible    [NAME:AssociatedCharges_FopVendorComboBox]
    Verify Control Object Is Not Visible    [NAME:AssociatedCharges_CardNumberMaskedTextBox]
    Verify Control Object Is Not Visible    [NAME:AssociatedCharges_maskContentButton]
    Verify Control Object Is Not Visible    [NAME:AssociatedCharges_ExpiryMonthComboBox]
    Verify Control Object Is Not Visible    [NAME:AssociatedCharges_ExpiryYearComboBox]

Verify Form Of Payment Details Displayed For Cash In Request For Hotel Prepaid-Intl Or Hotel Prepaid-Dom
    Run Keyword And Continue On Failure    Verify Control Object Is Not Visible    [NAME:Request_CreditCardNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Not Visible    [NAME:Request_CreditCardPreferenceComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Not Visible    [NAME:Request_CreditCardTypesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Not Visible    [NAME:Request_ExpiryDateDatePicker]

Verify Form Of Payment Details Displayed For Credit Card In Associated Charges
    Verify Control Object Is Visible    [NAME:AssociatedCharges_FormOfPaymentComboBox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_FormOfPaymentComboBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_FopVendorComboBox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_FopVendorComboBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_CardNumberMaskedTextBox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_CardNumberMaskedTextBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_maskContentButton]
    Verify Control Object Is Enabled    [NAME:AssociatedCharges_maskContentButton]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_ExpiryMonthComboBox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_ExpiryMonthComboBox]
    Verify Control Object Is Visible    [NAME:AssociatedCharges_ExpiryYearComboBox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_ExpiryYearComboBox]

Verify Form Of Payment Details Displayed For Credit Card In Request For Hotel Prepaid-Intl Or Hotel Prepaid-Dom
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CreditCardNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CreditCardPreferenceComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_CreditCardTypesComboBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Request_ExpiryDateDatePicker]

Verify Form Of Payment Field Values When Product Is Hotel Prepaid-Intl Or Hotel Prepaid-Dom
    [Arguments]    ${cc_number}    ${cc_type}    ${expiry_date_mm/yy}    ${cc_preference}
    Verify CC Number In Request Is Correct    ${cc_number}
    Verify CC Type In Request Is Correct    ${cc_type}
    Verify Expiry Date In Request Is Correct    ${expiry_date_mm/yy}
    Verify CC Preference In Request Is Correct    ${cc_preference}

Verify Form Of Payment Fields Default Values In Request When Product Is Hotel Prepaid-Intl Or Hotel Prepaid-Dom
    [Arguments]    ${cc_number}    ${cc_preference}    ${cc_type}    ${cc_date_mm/yyy}

Verify Form Of Payment Fields Displayed In Request Depending On FP Line When Product Is Hotel Prepaid-Intl Or Hotel Prepaid-Dom
    Get Form Of Payment In The PNR
    Run Keyword And Continue On Failure    Run Keyword If    '${fop_type}.lower()}' != 'true'    Verify Form Of Payment Details Displayed For Credit Card In Request For Hotel Prepaid-Intl Or Hotel Prepaid-Dom
    ...    ELSE    Verify Form Of Payment Details Displayed For Cash In Request For Hotel Prepaid-Intl Or Hotel Prepaid-Dom

Verify GST Amount Displayed In Power Express Is Correct
    [Arguments]    ${expected_gst_number}    ${actual_gst_number}
    Should Be Equal As Numbers    ${expected_gst_number}    ${actual_gst_number}

Verify GST Value Is Correct
    [Arguments]    ${expected_gst_value}=${EMPTY}
    ${expected_gst}    Get Variable Value    ${computed_gst}    ${expected_gst_value}
    Get GST
    Verify Actual Value Matches Expected Value    ${gst}    ${expected_gst}

Verify Generated Exchange Order Is A Number
    ${actual_exchange_order}    Get Exchange Order Number
    Run Keyword And Continue On Failure    Should Not Be Equal    0000000000    ${actual_exchange_order}    msg=The Exchange Order number generated is unexpectedly '0000000000' as if Raise Type is NULL which is an obsolete feature.
    Run Keyword And Continue On Failure    Should Match Regexp    ${actual_exchange_order}    \\d+

Verify Geographical Area Is Not Required
    Verify Control Object Field Is Not Mandatory    [NAME:GeographicalAreaComboBox]
    Take Screenshot

Verify Geographical Area Is Required
    Verify Control Object Field Is Mandatory    [NAME:GeographicalAreaComboBox]
    Take Screenshot

Verify Geographical Area Values Are Correct
    [Arguments]    @{expected_geographic_area}
    ${actual_geographic_area}    Get Dropdown Values    [NAME:GeographicalAreaComboBox]
    Log List    ${actual_geographic_area}
    Log List    ${expected_geographic_area}
    Run Keyword And Continue On Failure    List Should Contain Sub List    ${actual_geographic_area}    ${expected_geographic_area}

Verify Gross Sell Computation For Associated Charges
    ${assoc_charges_gross_sell}    Evaluate    ${assoc_charges_cost_amount}+${assoc_charges_commission}-${assoc_charges_discount}
    ${assoc_charges_gross_sell}    Round Apac    ${assoc_charges_gross_sell}    IN
    Set Test Variable    ${assoc_charges_gross_sell}
    [Return]    ${assoc_charges_gross_sell}

Verify Gross Sell Computation In Associated Charges
    ${computed_gross_sell}    Evaluate    ${assoc_charges_cost_amount}+${assoc_charges_commission}-${assoc_charges_discount}
    ${computed_gross_sell}    Round Apac    ${computed_gross_sell}    IN
    ${assoc_charges_gross_sell}    Convert To Integer    ${assoc_charges_gross_sell}
    Set Suite Variable    ${computed_gross_sell}
    Run Keyword And Continue On Failure    Should Be Equal    ${computed_gross_sell}    ${assoc_charges_gross_sell}

Verify Guarantee By Is Correct
    [Arguments]    ${actual_guarantee_by}
    Get Guarantee By
    Run Keyword And Continue On Failure    Should Be Equal    ${actual_guarantee_by}    ${guarantee_by}    PASSED: Values are equal

Verify Hotel Name Is Correct
    [Arguments]    ${actual_hotel_name}
    Get Hotel Name
    Run Keyword And Continue On Failure    Should Be Equal    ${hotel_name}    ${actual_hotel_name}

Verify Hotel Segments Are Retrieved Correctly And Displayed In Dropdown
    Get Current Hotel Segments From The PNR For IN
    Get Hotel Segment Dropdown Values
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${hotel_segment_list}    ${displayed_hotel_segment_list}

Verify India Service Info Charges Are Correct
    [Documentation]    Do not use this keyword in a test case. This keyword is used by Verify Calculations In Other Services high level keyword.
    Comment    Get India Service Info Field Values
    Compute Service Info Charges For India
    Should Be Equal As Integers    ${commission_amount}    ${commission}

Verify Insurance Remarks Are Written When FOP Is Cash Or Invoice In The PNR
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${gst}    Get Variable Value    ${gst}    ${EMPTY}
    ${market_identifer}    Set Variable If    "${country}" == "SG"    S    A
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${gst}" != "${EMPTY}" and "${bta_description}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifer}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/FS/FF8-FF/FF40-${bta_description.upper()}
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifer}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/FS/FF8-FF/FF34-AB
    Run Keyword If    "${bta_description}" != "${EMPTY}"    Verify Specific Line Is Written In The PNR    RM \\*MSX\\/FF41-.*\\/FF34-AB\\/FF35-OTH\\/FF36-M    true
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/FF35-OTH/FF36-M/FF47-CWT
    Run Keyword If    "${bta_description}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify Insurance Remarks Are Written When FOP Is Credit Card In The PNR
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${fop_exp_date}    Set Variable    ${expiry_month}${short_expiry_year}
    ${credit_card_length_excluding_last_four_digits}    Get Length    ${credit_card_number[:-4]}
    ${masked_characters_excluding_last_four}    Evaluate    "".join(["X" * ${credit_card_length_excluding_last_four_digits}])
    ${masked_credit_card_number}    Replace String    ${credit_card_number}    ${credit_card_number[:-4]}    ${masked_characters_excluding_last_four}
    ${gst}    Get Variable Value    ${gst_amount}    ${EMPTY}
    ${market_identifer}    Set Variable If    "${country}" == "SG"    S    A
    ${fop_code}    Run Keyword If    "${form_of_payment}" == "Credit Card (CX)"    Get Credit Card Vendor Code    ${form_of_payment_vendor}
    ...    ELSE    Set Variable    CC
    ${selling_price_with_gst}    Run Keyword If    "${gst}" != "${EMPTY}"    Evaluate    ${total_selling_price} + ${gst}
    ...    ELSE    Set Variable    ${total_selling_price}
    ${selling_price_with_gst}    Round APAC    ${selling_price_with_gst}    ${country}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${gst}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifer}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/F${fop_code}
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifer}${total_selling_price}/SF${total_selling_price}/C${commission}/F${fop_code}
    Verify Specific Remark Is Written In The PNR    RM *MSX/CCN${form_of_payment_vendor}${masked_credit_card_number}EXP${fop_exp_date}/D${selling_price_with_gst}/FF8-FF
    Run Keyword If    "${bta_description}" != "${EMPTY}"    Verify Specific Line Is Written In The PNR    RM \\*MSX\\/FF40-${bta_description.upper()}\\/FF41-.*\\/FF34-AB    true
    Run Keyword If    "${bta_description}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/FF35-OTH/FF36-M/FF47-CWT
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify Insured Person Record Is Displayed In The Insured Grid
    [Arguments]    @{expected_insured_record}
    [Documentation]    List format must be in sequence:
    ...    Name | Relationship | Premium
    ${insured_collection}    Convert To List    ${insured_collection}
    : FOR    ${actual_data}    IN    @{insured_collection}
    \    ${expected_insured_record_list}    Evaluate    [expected_eo.lower() for expected_eo in ${expected_insured_record}]    #Expected Data converts to lower case
    \    ${actual_insured_record_list}    Evaluate    [actual_eo.lower() for actual_eo in ${actual_data}]    #Actual Data converts to lower case
    \    Log List    ${expected_insured_record_list}
    \    Log List    ${actual_insured_record_list}
    \    ${is_correct}    Run Keyword And Return Status    Lists Should Be Equal    ${actual_insured_record_list}    ${expected_insured_record_list}
    \    Exit For Loop If    "${is_correct}" == "True"
    Verify Actual Value Matches Expected Value    ${is_correct}    True

Verify Insured Person Record Is Not Displayed In The Insured Grid
    [Arguments]    @{expected_insured_record}
    ${insured_collection}    Convert To List    ${insured_collection}
    : FOR    ${actual_data}    IN    @{insured_collection}
    \    ${expected_insured_record_list}    Evaluate    [expected_eo.lower() for expected_eo in ${expected_insured_record}]    #Expected Data converts to lower case
    \    ${actual_insured_record_list}    Evaluate    [actual_eo.lower() for actual_eo in ${actual_data}]    #Actual Data converts to lower case
    \    Log List    ${expected_insured_record_list}
    \    Log List    ${actual_insured_record_list}
    \    ${is_correct}    Run Keyword And Return Status    Lists Should Be Equal    ${actual_insured_record_list}    ${expected_insured_record_list}
    \    Exit For Loop If    "${is_correct}" == "True"
    Verify Actual Value Matches Expected Value    ${is_correct}    False

Verify Itinerary Remarks Are Written For Tour Intl
    Convert Date To GDS Format For India    ${start_date}
    Set Suite Variable    ${start_date_code}    ${date}
    Get Passive Segment Number    ${date_dd_mmm.upper()}
    Convert Date To GDS Format For India    ${end_date}
    Set Suite Variable    ${end_date_code}    ${date}
    Retrieve PNR Details from Amadeus    ${current_pnr}    RTB
    Verify Specific Line Is Written In The PNR    RIR ${package_name.upper()}/S${segment_number.strip()}    false    false    true
    Verify Specific Line Is Written In The PNR    RIR START:${start_date_code.upper()} END:${end_date_code.upper()}/S${segment_number.strip()}    false    false    true

Verify Itinerary Remarks Are Written In The RIR Lines
    [Arguments]    @{itin_remarks_list}
    : FOR    ${itin_remark}    IN    @{itin_remarks_list}
    \    Run Keyword And Continue On Failure    Verify Specific Remark Is Written In The PNR    RIR ${itin_remark.upper()}
    Log    Exited

Verify Itinerary Remarks Item Is Retained In Left Grid View
    [Arguments]    ${count}
    Click Left Itinerary Remarks Grid View
    Send    {PGUP}{UP}
    : FOR    ${i}    IN RANGE    ${count}
    \    Send    {DOWN}
    Copy
    ${cpy_io_rmk}=    Get Clipboard Content
    Run Keyword And Continue On Failure    Should Be Equal As Strings    ${cpy_io_rmk}    ${selected_io_rmk}
    Clear Data From Clipboard

Verify Left Exchange Order Remarks Grid View is Uneditable
    ${random_string}    String.Generate Random String    8    [LETTERS][NUMBERS]
    Send    ${random_string}
    Copy
    ${grid_capture}    Get Clipboard Content
    Run Keyword And Continue On Failure    Should Not Be Equal    ${random_string}    ${grid_capture}
    Clear Data From Clipboard

Verify Left Itinerary Remarks Grid View Is Uneditable
    ${random_string}    String.Generate Random String    8    [LETTERS][NUMBERS]
    Send    ${random_string}
    Copy
    ${grid_capture}    Get Clipboard Data
    Run Keyword And Continue On Failure    Should Not Be Equal    ${random_string}    ${grid_capture}
    Clear Data From Clipboard

Verify Mandatory Field Color For Incorrect Data Entered
    [Arguments]    ${control_id}
    ${city_color}    Get Pixel Color    control_id=${control_id}
    Run Keyword And Continue On Failure    Run Keyword If    "${city_color}"!="FFD700"    Log    Correct Entry
    Run Keyword And Continue On Failure    Run Keyword If    "${city_color}"=="FFD700"    Log    Incorrect Data Entry

Verify Merchant Fee Computation In Associated Charges
    [Arguments]    ${merchant_fee_percentage}    ${computed_vat_gst_amount}
    [Documentation]    1. Merchant Fee Percentage ( VI = 0.0181, CA = 0.0181, AX = 0.0225)
    ...    2. Get Product VAT/GST Amount from DB or excel file
    ...    3. Insert this keyword before this step: Verify Gross Sell Computation In Associated Charges to get ${computed_gross_sell}
    ${computed_merchant_fee}    Evaluate    (${computed_gross_sell} + ${computed_vat_gst_amount}) * ${merchant_fee_percentage}
    ${computed_merchant_fee}    Round Apac    ${computed_merchant_fee}    IN
    ${assoc_charges_merchant_fee}    Convert To Integer    ${assoc_charges_merchant_fee}
    Set Test Variable    ${computed_merchant_fee}
    Run Keyword And Continue On Failure    Should Be Equal    ${computed_merchant_fee}    ${assoc_charges_merchant_fee}

Verify Merchant Fee Displayed In Power Express Is Correct
    [Arguments]    ${expected_merchant_fee}    ${actual_merchant_fee}
    Should Be Equal As Numbers    ${expected_merchant_fee}    ${actual_merchant_fee}

Verify Merchant Fee Value Is Correct
    [Arguments]    ${expected_merchant_fee_value}=${EMPTY}
    ${expected_merchant_fee}    Get Variable Value    ${computed_merchant_fee}    ${expected_merchant_fee_value}
    Get Merchant Fee In Other Services
    Verify Actual Value Matches Expected Value    ${merchant_fee}    ${expected_merchant_fee}

Verify Multiple Exchange Order Remarks Items Are Deleted In Right Grid View
    Activate Power Express Window
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    : FOR    ${value}    IN    @{get_values}
    \    Should Not Be Equal As Strings    ${value}    ${deleted_eo_remark}

Verify Multiple Exchange Order Remarks Items Are Retained In Left Grid View
    Activate Power Express Window
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    : FOR    ${value}    IN    @{get_values}
    \    Should Not Be Equal As Strings    ${value}    ${deleted_io_remark}

Verify Multiple Itinerary Remarks Items Are Deleted In Right Grid View
    Activate Power Express Window
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    : FOR    ${value}    IN    @{get_values}
    \    Should Not Be Equal As Strings    ${value}    ${deleted_io_remark}

Verify Multiple Itinerary Remarks Items Are Retained In Left Grid View
    Click Delete All Button In Itinerary Remarks Grid View
    Click Add Button in Itinerary Remarks Grid View
    Click Left Itinerary Remarks Grid View
    Send    {PGUP}{HOME}{UP}{RIGHT}{RIGHT}{SHIFTDOWN}{PGDN}{SHIFTUP}
    Copy
    ${cpy_io_rmk}=    Get Clipboard Content
    : FOR    ${io_remarks}    IN    @{selected_multiple_left_io_rmk_list}
    \    Should Contain    ${cpy_io_rmk}    ${io_remarks.strip()}
    Clear Data From Clipboard
    Log    ${cpy_io_rmk}

Verify Multiple Selected Exchange Order Remarks Items Are Reflected In Right Grid View
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    Lists Should Be Equal    ${selected_multiple_eo_rmk_list}    ${get_values}

Verify Multiple Selected Itinerary Remarks Items Are Reflected In Right Grid VIew
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    Lists Should Be Equal    ${selected_multiple_io_rmk_list}    ${get_values}

Verify Nett Cost Value Is Correct
    [Arguments]    ${expected_nett_cost_value}=${EMPTY}
    ${expected_nett_cost}    Get Variable Value    ${computed_nett_cost}    ${expected_nett_cost_value}
    Get Nett Cost In Other Services
    Verify Actual Value Matches Expected Value    ${nett_cost}    ${expected_nett_cost}

Verify No Merchant Fee Checkbox Status
    [Arguments]    ${is_ticked}
    ${object}    Determine Multiple Object Name Based On Active Tab    Charges_NoMerchantFeeCheckbox,AssociatedCharges_NoMerchantFeeCheckbox    False
    ${is_checked}    Get Checkbox Status    ${object}
    ${no_merchant_fee_checkbox_status}    Set Variable If    "${is_checked.upper()}" == "TRUE"    true    false
    Run Keyword And Continue On Failure    Should Be Equal    ${no_merchant_fee_checkbox_status.lower()}    ${is_ticked.lower()}

Verify No Merchant Fee In Associated Charges Is Disabled
    Verify Control Object Is Visible    [NAME:AssociatedCharges_NoMerchantFeeCheckbox]
    Verify Control Object Is Disabled    [NAME:AssociatedCharges_NoMerchantFeeCheckbox]

Verify Number Of Days Is Not Required
    Verify Control Object Field Is Not Mandatory    [NAME:NumberOfDaysTextBox]
    Take Screenshot

Verify Number Of Days Is Required
    Verify Control Object Field Is Mandatory    [NAME:NumberOfDaysTextBox]
    Take Screenshot

Verify Number Of People Is Correct
    [Arguments]    ${actual_number_of_people}
    Get Number Of People
    Run Keyword And Continue On Failure    Should Be Equal    ${number_of_people}    ${actual_number_of_people}

Verify Other Services Remarks Are Written In The PNR When Cash Or Invoice
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${gst}    Get Variable Value    ${gst}    ${EMPTY}
    ${market_identifier}    Set Variable If    "${country}" == "SG"    S    A
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX1
    Run Keyword If    "${gst}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/FS
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/FS
    Verify Specific Remark Is Written In The PNR    RM *MSX/CCN${card_vendor_type}${card_number}EXP${fop_exp_date}/D${selling_price_with_gst}
    Run Keyword If    "${bta_description}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/FF8-FF/FF40-${bta_description.upper()}/FF41-
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify Other Services Remarks Are Written In The PNR When Credit Card
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${fop_exp_date}    Set Variable    ${expiry_month}${short_expiry_year}
    ${market_identifier}    Set Variable If    "${country}" == "SG"    S    A
    ${passenger_id}    Get Variable Value    ${passenger_id}    X1
    ${gst}    Get Variable Value    ${gst}    ${EMPTY}
    ${bta_description}    Get Variable Value    ${bta_description}    ${EMPTY}
    ${fop_code}    Run Keyword If    "${form_of_payment}" == "Credit Card (CX)"    Get Credit Card Vendor Code    ${card_vendor_type}
    ...    ELSE    Set Variable    CC
    ${selling_price_with_gst}    Run Keyword If    "${gst}" != "${EMPTY}"    Evaluate    ${total_selling_price} + ${gst}
    ...    ELSE    Set Variable    ${total_selling_price}
    ${selling_price_with_gst}    Round APAC    ${selling_price_with_gst}    ${country}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/P${passenger_id}
    Run Keyword If    "${gst}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/F${fop_code}
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/F${fop_code}
    Verify Specific Remark Is Written In The PNR    RM *MSX/CCN${card_vendor_type}${card_number}EXP${fop_exp_date}/D${selling_price_with_gst}
    Run Keyword If    "${bta_description}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/FF8-FF/FF40-${bta_description.upper()}/FF41-
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify Other Services Tabs Are Not Displayed
    Verify Control Object Is Not Visible    [NAME:OtherServicesTabControl]

Verify PDF Is Displayed
    Verify Control Object Is Visible    [NAME:btnViewPDF]
    Log    "PDF is Displayed"

Verify Passive Segment Is Written In The PNR
    [Arguments]    ${product}    ${city}={EMPTY}
    Retrieve PNR Details From Amadeus    ${current_pnr}    RTX
    Run Keyword If    "${product.lower()}"=="tour intl"    Verify Passive Segment Is Written In The PNR When Product Is Tour Intl
    Run Keyword If    "${product.lower()}"=="meet & greet"    Verify Passive Segment Is Written When Product Is Meet and Greet    ${product}    ${city_name}
    Run Keyword If    "${product.lower()}"=="despatch" or "${product.lower()}"=="ets call charges" or "${product.lower()}"=="ferry" or "${product.lower()}"=="merchant fee" or "${product.lower()}"=="mice domestic" or "${product.lower()}"=="mice international" or "${product.lower()}"=="oths handling fee" or "${product.lower()}"=="rebate" or "${product.lower()}"=="tour domestic" or "${product.lower()}"=="transaction fee-air only" or "${product.lower()}"=="vat"    Verify Passive Segment Is Written In The PNR When Product Is Non-Air Other Services    ${product}
    Run Keyword If    "${product.lower()}"=="visa fee" or "${product.lower()}"=="visa dd" or "${product.lower()}"=="visa handling fee"    Verify Passive Segment Is Written In The PNR When Product Is Visa Fee, Visa DD Or Visa Handling    ${product}
    Run Keyword If    "${product.lower()}"=="insurance"    Verify Passive Segment Is Written In The PNR When Product Is Insurance

Verify Passive Segment Is Written In The PNR When Product Is Visa Fee, Visa DD Or Visa Handling
    [Arguments]    ${product}
    ${processing_type}    Run Keyword If    "${document}"=="Visa"    Set Variable If    "${processing_type}"=="Normal"    VIS    VIU
    ...    ELSE IF    "${document}"=="Passport"    Set Variable    OTH
    Get Vendor Code For India    ${product}    ${vendor}
    Convert Date To GDS Format For India    ${date_of_application}
    Set Test Variable    ${date_of_application_wo_year}    ${date_dd_mmm}
    Run Keyword If    "${document}"=="Visa"    Verify Specific Line Is Written In The PNR    MIS 1A HK1 IXA ${date_of_application_wo_year}-TYP-${processing_type.upper()}/SUC-${current_vendor_code}/SUN-${vendor.upper()}/STS-HK/SD-${date_of_application_wo_year}/TK-${eo_number}/SI-${country_visa.upper()} ${doc_type.upper()} ${entries.upper()}-ENTRY VALID ${validity} ${validity_uom.upper()}    false    true    true
    ${passive_segment_visa}    Set Variable If    "${document}"=="Visa"    MIS 1A HK1 IXA ${date_of_application_wo_year}-TYP-${processing_type.upper()}/SUC-${current_vendor_code}/SUN-${vendor.upper()}/STS-HK/SD-${date_of_application_wo_year}/TK-${eo_number}/SI-${country_visa.upper()} ${doc_type.upper()} ${entries.upper()}-ENTRY VALID ${validity} ${validity_uom.upper()}    ${EMPTY}
    Set Suite Variable    ${passive_segment_visa}
    Run Keyword If    "${document}"=="Passport"    Verify Specific Line Is Written In The PNR    MIS 1A HK1 IXA ${date_of_application_wo_year}-TYP-${processing_type.upper()}/SUC-${current_vendor_code}/SUN-${vendor.upper()}/STS-HK/SD-${date_of_application_wo_year}/TK-${eo_number}/SI-${doc_type.upper()} ${country_visa.upper()} ${document.upper()}    false    true    true
    ${passive_segment_passport}    Set Variable If    "${document}"=="Passport"    MIS 1A HK1 IXA ${date_of_application_wo_year}-TYP-${processing_type.upper()}/SUC-${current_vendor_code}/SUN-${vendor.upper()}/STS-HK/SD-${date_of_application_wo_year}/TK-${eo_number}/SI-${doc_type.upper()} ${country_visa.upper()} ${document.upper()}
    Set Suite Variable    ${passive_segment_passport}
    ${document2}    Set Variable If    "${document}"=="Visa"    Visa    Passport
    Set Suite Variable    ${document2}

Verify Plan Selected Is Not Required
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AddressTextBox]
    Take Screenshot

Verify Plan Selected Is Required
    Send    {TAB}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:AddressTextBox]
    Take Screenshot

Verify Pop-up Message Is Displayed Upon Click Of Save In Associated Charges
    Win Activate    Error    ${EMPTY}
    Verify Window Is Active    Error
    Send    {ENTER}
    Wait Until Window Does Not Exists    Error

Verify Prepopulated Default Value In Vendor Info tab
    Get Vendor
    Open Excel    ${product_vendor_sg_hk_in}
    ${row_count}    Get Row Count    Vendor SGHKIN
    ${vendor_code}    Set Variable    ${EMPTY}
    : FOR    ${vendor_pointer}    IN RANGE    ${row_count}
    \    ${current_vendor}    Read Cell Data By Coordinates    Vendor SGHKIN    2    ${vendor_pointer}
    \    Run Keyword If    "${vendor.lower()}" == "${current_vendor.lower()}"    Exit For Loop
    ${cell_address}    Read Cell Data By Coordinates    Vendor SGHKIN    3    ${vendor_pointer}
    ${cell_city}    Read Cell Data By Coordinates    Vendor SGHKIN    5    ${vendor_pointer}
    ${cell_country}    Read Cell Data By Coordinates    Vendor SGHKIN    6    ${vendor_pointer}
    ${cell_email}    Read Cell Data By Coordinates    Vendor SGHKIN    10    ${vendor_pointer}
    ${cell_phone}    Read Cell Data By Coordinates    Vendor SGHKIN    11    ${vendor_pointer}
    Run Keyword And Continue On Failure    Run Keyword If    "${address}"=="${cell_address}"    Log    Address is Matched with Service:${cell_address}
    ...    ELSE    Log    Address is: ${address}
    Run Keyword And Continue On Failure    Run Keyword If    "${city}"=="${cell_city}"    Log    City is Matched with Service:${cell_city}
    ...    ELSE    Log    City is: ${city}
    Run Keyword And Continue On Failure    Run Keyword If    "${country}"=="${cell_country}"    Log    Country is Matched with Service:${cell_country}
    ...    ELSE    Log    Country is: ${country}
    Run Keyword And Continue On Failure    Run Keyword If    "${cwt_email}"=="${cell_email}"    Log    Email is Matched with Service:${cell_email}
    ...    ELSE    Log    Email is: ${cwt_email}
    Run Keyword And Continue On Failure    Run Keyword If    "${cwt_phone}"=="${cell_phone}"    Log    Contact Details is Matched with Service:${cell_phone}
    ...    ELSE    Log    Phone is: ${cwt_phone}

Verify Prepopulated Values For Active Hotel Segment
    [Arguments]    ${e_checkin_date}    ${e_checkout_date}    ${e_daily_rate}    ${e_number_of_people}    ${e_guarantee_by}    ${e_cc_no}
    ...    ${e_cc_type}    ${e_cc_expiry_date}    ${e_city_code}    ${e_hotel_name}    ${e_city_name}
    @{expected_hotel_info}    Create List    ${e_checkin_date}    ${e_checkout_date}    ${e_daily_rate}    ${e_number_of_people}    ${e_guarantee_by}
    ...    ${e_cc_no}    ${e_cc_type}    ${e_cc_expiry_date}    ${e_city_code}    ${e_hotel_name}    ${e_city_name}
    ${hotel_segment_value}    Get Control Text Value    [NAME:Request_HotelSegmentsCombobox]
    : FOR    ${values}    IN    @{expected_hotel_info}
    \    Run Keyword And Continue On Failure    Run Keyword If    '${hotel_segment_value}'=='2 HH JFK 28DEC HILTON JFK AIRPORT'    List Should Contain Value    ${hotel_info}    ${values}

Verify Prepopulated Values For Passive Hotel Segment
    [Arguments]    ${e_checkin_date}    ${e_checkout_date}    ${e_number_of_people}    ${e_city_code}    ${e_city_name}
    @{expected_hotel_info}    Create List    ${e_checkin_date}    ${e_checkout_date}    ${e_number_of_people}    ${e_city_code}    ${e_city_name}
    ${hotel_segment_value}    Get Control Text Value    [NAME:Request_HotelSegmentsCombobox]
    : FOR    ${values}    IN    @{expected_hotel_info}
    \    Run Keyword And Continue On Failure    Run Keyword If    '${hotel_segment_value}'=='3 1A TYO 28DEC'    List Should Contain Value    ${hotel_info}    ${values}

Verify Prepopulated Values When Product Is Hotel Prepaid
    ${hotel_segment_value}    Get Control Text Value    [NAME:Request_HotelSegmentsCombobox]
    Run Keyword If    '${hotel_segment_value}'=='2 HH JFK 28DEC HILTON JFK AIRPORT'    Verify Prepopulated Values For Active Hotel Segment    28/12/2018    29/12/2018    USD \ \ \ US Dollar    1
    ...    Credit Card    XXXXXXXXXXXX1111    VI    12/25    JFK    HILTON JFK AIRPORT
    ...    JFK
    Run Keyword If    '${hotel_segment_value}'=='3 1A TYO 28DEC'    Verify Prepopulated Values For Passive Hotel Segment    28/12/2018    29/12/2018    1    TYO
    ...    TYO

Verify Range In Vendor Info Tab
    ${attention_length}    Get Length    ${attention}
    ${address_length}    Get Length    ${address}
    ${city_length}    Get Length    ${city}
    ${country_length}    Get Length    ${country}
    ${details_legth}    Get Length    ${details}
    ${cwt_email_length}    Get Length    ${cwt_email}
    ${cwt_phone_length}    Get Length    ${cwt_phone}
    Run Keyword And Continue On Failure    Run Keyword If    "${attention_length}"<100    Log    Length under 100
    Run Keyword And Continue On Failure    Run Keyword If    "${address_length}"<100    Log    Length under 100
    Run Keyword And Continue On Failure    Run Keyword If    "${city_length}"<'50'    Log    Length under 50
    Run Keyword And Continue On Failure    Run Keyword If    "${country_length}"<'50'    Log    Length under 50
    Run Keyword And Continue On Failure    Run Keyword If    "${details_legth}"<100    Log    Length under 100
    Run Keyword And Continue On Failure    Run Keyword If    "${cwt_email_length}"<100    Log    Length under 100
    Run Keyword And Continue On Failure    Run Keyword If    "${cwt_phone_length}"<100    Log    Length under 100
    Set Suite Variable    ${attention_length}
    Set Suite Variable    ${address_length}
    Set Suite Variable    ${city_length}
    Set Suite Variable    ${country_length}
    Set Suite Variable    ${details_legth}
    Set Suite Variable    ${cwt_email_length}
    Set Suite Variable    ${cwt_phone_length}

Verify Record Is Displayed In Associated Charges Grid
    [Arguments]    ${row_id}
    ${associated_charges_collection}    Get All Records In Associated Charges Grid
    : FOR    ${ac_data}    IN    @{associated_charges_collection}
    \    ${expected_ac_collection}    Run Keyword If    "${ac_data}" != "[]"    Evaluate    [expected_eo.lower() for expected_eo in ${associated_charges_row${row_id}}]
    \    ...    ELSE    Set Variable    ${associated_charges_row${row_id}}
    \    ${actual_ac_collection}    Run Keyword If    "${ac_data}" != "[]"    Evaluate    [actual_eo.lower() for actual_eo in ${ac_data}]
    \    ...    ELSE    Set Variable    ${ac_data}
    \    Log List    ${expected_ac_collection}
    \    Log List    ${actual_ac_collection}
    \    ${is_correct}    Run Keyword And Return Status    Lists Should Be Equal    ${actual_ac_collection}    ${expected_ac_collection}
    \    Exit For Loop If    "${is_correct}" == "True"
    Verify Actual Value Matches Expected Value    ${is_correct}    True

Verify Record Is Displayed In Grid For Vendor Info Tab
    [Arguments]    ${row_id}
    ${vendor_collection}    Get All Records From Grid In Vendor Info Tab
    Log    ${vendor_collection}
    ${expected_ac_collection}    Set Variable    ${vendor_grid_row${row_id}}
    ${actual_ac_collection}    Set Variable    ${vendor_collection}
    ${expected_ac_collection}    Convert To List    ${expected_ac_collection}
    ${actual_ac_collection}    Convert To List    ${actual_ac_collection}
    ${is_correct}    Run Keyword And Return Status    List Should Contain Value    ${actual_ac_collection}    ${expected_ac_collection}
    Comment    ${is_correct}    Run Keyword And Return Status    List Should Contain Sub List    ${actual_ac_collection}    ${expected_ac_collection}
    Comment    \    Exit For Loop If    "${is_correct}" == "True"
    Verify Actual Value Matches Expected Value    ${is_correct}    True
    Log List    ${actual_ac_collection}
    Log List    ${expected_ac_collection}

Verify Record Is Not Displayed In Associated Charges Grid
    [Arguments]    ${row_id}
    ${associated_charges_collection}    Get All Records In Associated Charges Grid
    : FOR    ${ac_data}    IN    @{associated_charges_collection}
    \    ${expected_ac_collection}    Run Keyword If    "${ac_data}" != "[]"    Evaluate    [expected_eo.lower() for expected_eo in ${associated_charges_row${row_id}}]
    \    ...    ELSE    Set Variable    ${associated_charges_row${row_id}}
    \    ${actual_ac_collection}    Run Keyword If    "${ac_data}" != "[]"    Evaluate    [actual_eo.lower() for actual_eo in ${ac_data}]
    \    ...    ELSE    Set Variable    ${ac_data}
    \    Log List    ${expected_ac_collection}
    \    Log List    ${actual_ac_collection}
    \    ${is_correct}    Run Keyword And Return Status    Lists Should Be Equal    ${actual_ac_collection}    ${expected_ac_collection}
    \    Run Keyword If    "${is_correct}" == "True"    Run Keyword And Continue On Failure    FAIL

Verify Request Fields Are Mandatory When Products Is Air BSp Or Air Domestic When Request VMPD Checkbox Is Clicked
    Verify Control Object Is Visible    [NAME:ReasonForIssueComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:ReasonForIssueComboBox]
    Verify Control Object Is Visible    [NAME:FareTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:FareTextbox]
    Verify Control Object Is Visible    [NAME:HeadlineCurrencyComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:HeadlineCurrencyComboBox]
    Verify Control Object Is Visible    [NAME:TaxesTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:TaxesTextbox]
    Verify Control Object Is Visible    [NAME:EquivalentAmountPaidTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:EquivalentAmountPaidTextbox]
    Verify Control Object Is Visible    [NAME:FormOfPaymentCombobox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:FormOfPaymentCombobox]
    Verify Control Object Is Visible    [NAME:CreditCardTypeCombobox]    ${title_power_express}

Verify Request Fields Are Optional In Request When Product Is Meet And Greet
    Verify Control Object Field Is Not Mandatory    [NAME:InternalRemarksTextBox]
    Verify Control Object Field Is Not Mandatory    [NAME:DateDatePicker]
    Verify Control Object Field Is Not Mandatory    [NAME:TimePickerControl]

Verify Request Fields Are Optional In Request When Products Is Air BSp Or Air Domestic When Request VMPD Checkbox Is Not Clicked
    Verify Control Object Is Visible    [NAME:SelectAllCheckBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:SelectAllCheckBox]
    Verify Control Object Is Visible    [NAME:PlatingCarrierComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PlatingCarrierComboBox]
    Verify Control Object Is Visible    [NAME:FareTypeComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:FareTypeComboBox]
    Verify Control Object Is Visible    [NAME:RequestVMPDCheckbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:RequestVMPDCheckbox]
    Verify Control Object Is Visible    [NAME:PNRTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PNRTextbox]
    Verify Control Object Is Visible    [NAME:ReasonForIssueComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ReasonForIssueComboBox]
    Verify Control Object Is Visible    [NAME:FareTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:FareTextbox]
    Verify Control Object Is Visible    [NAME:HeadlineCurrencyComboBox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:HeadlineCurrencyComboBox]
    Verify Control Object Is Visible    [NAME:TaxesTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:TaxesTextbox]
    Verify Control Object Is Visible    [NAME:EquivalentAmountPaidTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:EquivalentAmountPaidTextbox]
    Verify Control Object Is Visible    [NAME:FormOfPaymentCombobox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:FormOfPaymentCombobox]
    Verify Control Object Is Visible    [NAME:IssueInExchangeForTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:IssueInExchangeForTextbox]
    Verify Control Object Is Visible    [NAME:InConjunctionWithTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:InConjunctionWithTextbox]
    Verify Control Object Is Visible    [NAME:RemarkTextbox]    ${title_power_express}
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:RemarkTextbox]

Verify Request Fields Default to Correct Values Upon Amend EO
    [Arguments]    ${product}    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="air bsp add on" or "${product.lower()}"=="air dom add on" or "${product.lower()}"=="air sales-non bsp int"    Verify Field Values In Request On Amend EO When Product Is Air BSP Add On, Air Dom Add On, Air Sales-Non BSP INT    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="air conso-dom"    Verify Field Values In Request On Amend EO When Product Is Air Conso Dom    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="hotel prepaid-intl" or "${product.lower()}"=="hotel prepaid-dom"    Verify Field Values In Request On Amend EO When Product Is Hotel Prepaid-Inlt Or Hotel Prepaid-Dom    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="visa fee" or "${product.lower()}"=="visa dd" or "${product.lower()}"=="visa handling fee"    Verify Field Values In Request On Amend EO When Product Is Visa    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="car intl" or "${product.lower()}"=="car dom"    Verify Field Values In Request On Amend EO When Product Is Car Intl Or Car Dom    ${identifier_1}    ${identifier_2}
    Run Keyword If    "${product.lower()}"=="tour intl"    Verify Field Values In Request On Amend EO When Product Is Tour Intl    ${identifier_1}    ${identifier_2}

Verify Request Tab Fields Displayed Or Not When Products Is Air BSp Or Air Domestic
    Verify Control Object Is Visible    [NAME:SelectAllCheckBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:PlatingCarrierComboBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:FareTypeComboBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:RequestVMPDCheckbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:PNRTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:ReasonForIssueComboBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:FareTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:HeadlineCurrencyComboBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:TaxesTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:EquivalentAmountPaidTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:FormOfPaymentCombobox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:CreditCardTypeCombobox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:CreditCardNumberTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:ExpiryDateDatePicker]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:IssueInExchangeForTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:InConjunctionWithTextbox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:RemarkTextbox]    ${title_power_express}

Verify Request Tab Fields In Amend EO When Product Is Air Bsp Or Air DOmestic
    [Arguments]    ${identifier1}    ${identifier2}
    Run Keyword And Continue On Failure    Should Be Equal    ${air_product_row${identifier1.lower()}}    ${air_product_row${identifier2.lower()}}

Verify Request Tab Fields Madatory And Optional When Product Is Air Bsp Or Air Domestic
    ${request_vmpd_checkbox_status}    Get Status Of Request VMPD Checkbox in Request Tab When Products Are Air BSp Or Air Domestic
    Run Keyword If    "${request_vmpd_checkbox_status.lower()}"=="true"    Verify Request Fields Are Mandatory when products is Air BSp Or Air Domestic When Request VMPD Checkbox Is Clicked
    ...    ELSE    Verify Request Fields Are Optional In Request When Products Is Air BSp Or Air Domestic When Request VMPD Checkbox Is Not Clicked

Verify Right Exchange Order Remarks Grid View Is Uneditable
    Click Cell In Data Grid Pane    [NAME:ToEoDataGridView]    Row 0    2
    ${random_string}    String.Generate Random String
    Send    ${random_string}
    Copy
    ${grid_capture}    Get Clipboard Content
    Run Keyword And Continue On Failure    Should Not Be Equal    ${random_string}    ${grid_capture}
    Clear Data From Clipboard

Verify Right Itinerary Remarks Grid View Is Uneditable
    Click Cell In Data Grid Pane    [NAME:ToIoDataGridView]    Row 0    2
    ${random_string}    String.Generate Random String    8    [LETTERS][NUMBERS]
    Send    ${random_string}
    Copy
    ${grid_capture}    Get Clipboard Data
    Run Keyword And Continue On Failure    Should Not Be Equal    ${random_string}    ${grid_capture}
    Clear Data From Clipboard

Verify Selected Exchange Order Remarks Item Is Reflected In Right Grid VIew
    Clear Data From Clipboard
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    Should Be equal    ${selected_eo_rmk}    @{get_values}[0]

Verify Selected Itinerary Remarks Item Is Reflected In Right Grid VIew
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    Should Be equal    ${selected_io_rmk}    @{get_values}[0]

Verify Selected Plan Values Are Correct
    [Arguments]    @{expected_selected_plan}
    ${actual_selected_plan}    Get Dropdown Values    [NAME:PlanSelectedComboBox]
    Log List    ${actual_selected_plan}
    Log List    ${expected_selected_plan}
    Run Keyword And Continue On Failure    List Should Contain Sub List    ${actual_selected_plan}    ${expected_selected_plan}

Verify Selling Price Value Is Correct
    [Arguments]    ${expected_selling_price_value}=${EMPTY}
    Get Selling Price
    Verify Actual Value Matches Expected Value    ${selling_price}    ${expected_selling_price_value}

Verify Sorting Of Exchange Order Remarks Items Are Correct
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToEoDataGridView]
    ${list_length}=    Get Length    ${selected_multiple_eo_rmk_list}
    : FOR    ${i}    IN RANGE    ${list_length}
    \    Should Not Be Equal As Strings    @{get_values}[${i}]    @{selected_multiple_eo_rmk_list}[${i}]

Verify Sorting Of Itinerary Remarks Items Are Correct
    @{get_values}    Get All Cell Values In Data Grid Pane    [NAME:ToIoDataGridView]
    ${list_length}=    Get Length    ${selected_multiple_io_rmk_list}
    : FOR    ${i}    IN RANGE    ${list_length}
    \    Should Not Be Equal As Strings    @{get_values}[${i}]    @{selected_multiple_io_rmk_list}[${i}]

Verify Specific Remark For Charges PO and GSA Is Written In The PNR
    Run Keyword If    "${charges_other_related_no}"!="${EMPTY}" and "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/PO${charges_other_related_no.upper()}/GSA${charges_vendor_ref_no.upper()}
    ...    ELSE IF    "${charges_other_related_no}"=="${EMPTY}" and "${charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/GSA${charges_vendor_ref_no.upper()}
    ...    ELSE IF    "${charges_other_related_no}"!="${EMPTY}"and "${charges_vendor_ref_no}"== "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/PO${charges_other_related_no.upper()}

Verify Specific Remark For Other Services Without BTA Description Is Written In The PNR
    Run Keyword If    ('${fee_code.lower()}'=='fcc' or '${fee_code.lower()}'=='fcx4') or ('${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='true' and '${fee_code.lower()}'=='fs')    Run Keyword And Continue On Failure    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF8-FF\\/FF34-AB\\/FF35-OTH\\/FF36-M\\/FF47-CWT
    Run Keyword If    '${is_with_gst.lower()}'=='false' and '${fee_code.lower()}'=='fs'    Run Keyword And Continue On Failure    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF34-AB\\/FF35-OTH\\/FF36-M\\/FF47-CWT

Verify Specific Remark For PO and GSA Is Written In The PNR
    Run Keyword If    "${assoc_charges_other_related_no}"!="${EMPTY}" and "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/PO${assoc_charges_other_related_no.upper()}/GSA${assoc_charges_vendor_ref_no.upper()}
    ...    ELSE IF    "${assoc_charges_other_related_no}"=="${EMPTY}" and "${assoc_charges_vendor_ref_no}"!="${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/GSA${assoc_charges_vendor_ref_no.upper()}
    ...    ELSE IF    "${assoc_charges_other_related_no}"!="${EMPTY}" and "${assoc_charges_vendor_ref_no}"== "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/PO${assoc_charges_other_related_no.upper()}

Verify Specific Remarks For Other Services With BTA Description Are Written In The PNR
    Run Keyword If    ('${fee_code.lower()}'=='fcc' or '${fee_code.lower()}'=='fcx4') or ('${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='true' and '${fee_code.lower()}'=='fs')    Verify Specific Remarks With BTA Description Are Written In The PNR
    Run Keyword If    '${is_with_gst.lower()}'=='false' and '${fee_code.lower()}'=='fs'    Verify Specific Remarks With BTA Description Are Written In The PNR For No GST And FOP Cash Or Invoice

Verify Specific Remarks For Other Services With FOP CC Or CX And GST Are Written In The PNR
    ${fop_amount}    Evaluate    ${selling_price}+${gst}
    ${fop_amount}    Convert To Float    ${fop_amount}
    ${card_number}    Get Control Text Value    [NAME:valueMaskedTextBox]
    ${card_number}    Get Substring    ${card_number}    -4
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${card_vendor_type}([A-Z0-9]+)${card_number}EXP${expiry_month}${expiry_year_truncated}\\/D${fop_amount}

Verify Specific Remarks For Other Services With FOP CC Or CX And No GST Are Written In The PNR
    Run Keyword If    '${country.lower()}'=='sg'    Convert Other Services Values To Float
    Run Keyword If    '${country.lower()}'=='hk'    Round Up Hk Other Services Values
    ${card_number}    Get Substring    ${card_number}    -4
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${card_vendor_type}(\\D+)${card_number}EXP${expiry_month}${expiry_year_truncated}\\/D${total_selling_price}

Verify Specific Remarks For Other Services With FOP Cash Or Invoice And No GST Are Written In The PNR
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/CCN${card_vendor_type}${card_number}EXP${expiry_month}${expiry_year_truncated}\\/D${total_selling_price}    1

Verify Specific Remarks For Other Services With GST Are Written In The PNR
    Run Keyword If    '${country.lower()}'=='sg'    Convert Other Services Values To Float
    Run Keyword If    '${country.lower()}'=='hk'    Round Up Hk Other Services Values
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/S${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/G${gst}\\/${fee_code}

Verify Specific Remarks For Other Services Without GST Are Written In The PNR
    [Arguments]    ${fee_code}
    Run Keyword If    '${country.lower()}'=='sg'    Convert Other Services Values To Float
    Run Keyword If    '${country.lower()}'=='hk'    Round Up Hk Other Services Values
    Run Keyword if    '${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='false' and ('${fee_code.lower()}'=='fcx4' or '${fee_code.lower()}'=='fcc')    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/S${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/${fee_code}
    Run Keyword if    '${country.lower()}'=='sg' and '${is_with_gst.lower()}'=='false' and '${fee_code.lower()}'=='fs'    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/S${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/${fee_code}\\/FF8-FF
    Run Keyword if    '${country.lower()}'=='hk' and ('${fee_code.lower()}'=='fcx4' or '${fee_code.lower()}'=='fcc')    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/A${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/${fee_code}
    Run Keyword if    '${country.lower()}'=='hk' and '${fee_code.lower()}'=='fs'    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/A${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/${fee_code}\\/FF8-FF

Verify Specific Remarks With BTA Description Are Written In The PNR
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF8-FF\\/FF40-${bta_description}\\/FF41-${formatted_date}
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF34-AB\\/FF35-OTH\\/FF36-M\\/FF47-CWT

Verify Specific Remarks With BTA Description Are Written In The PNR For No GST And FOP Cash Or Invoice
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF40-${bta_description}\\/FF41-${formatted_date}\\/FF34-AB
    Verify Exact Remark Is Written In The PNR    RM \\*MSX\\/FF35-OTH\\/FF36-M\\/FF47-CWT

Verify Support Email Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    SupportEmailTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Tab Is Disabled
    [Arguments]    ${tab_name}
    [Documentation]    Pre-requisite keyword: Click Tab In Other Services Panel ${tab_name}
    ${status}    Is Tab Selected    ${tab_name}
    Run Keyword And Continue On Failure    Run Keyword If    "${status}"=="True"    FAIL
    ...    ELSE    Log    PASSED: ${tab_name} is Disabled

Verify Tabs Displayed In Other Services
    [Arguments]    @{expected_tabs}
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    @{other_service_tabs}    Get Tab Items    OtherServicesTabControl
    Should Be Equal As Strings    ${other_service_tabs}    ${expected_tabs}    msg=Tab Missing

Verify Tabs Displayed In Other Services When Product Is Air BSp Or Air Domestic
    Verify Tabs Displayed In Other Services    Request    Charges    Associated Charges    Vendor Info    MI

Verify That Accounting Lines For Visa Processing Are Written When FOP is CX
    [Arguments]    ${product}    ${vendor}    ${country}=hk
    Get Product Code    ${country}    ${product}
    Get Vendor Code    ${country}    ${product}    ${vendor}
    ${credit_card_length_excluding_last_four_digits}    Get Length    ${credit_card_number[:-4]}
    ${masked_characters_excluding_last_four}    Evaluate    "".join(["X" * ${credit_card_length_excluding_last_four_digits}])
    ${masked_credit_card_number}    Replace String    ${credit_card_number}    ${credit_card_number[:-4]}    ${masked_characters_excluding_last_four}
    Comment    ${passenger_id}    Set Variable If    ${passenger_id}==${EMPTY}    1    ${passenger_id}
    ${entry}    Convert To Uppercase    ${entries}
    ${processing}    Convert To Uppercase    ${processing}
    Comment    ${fee_code}    Set Variable If    '${form_of_payment.lower()}'=='cash or invoice'    FS    '${form_of_payment.lower()}'=='credit card (cx)'    FCX4
    ${fee_code}    Run Keyword If    '${form_of_payment.lower()}'=='cash or invoice'    Set Variable    FS
    ...    ELSE    Get Credit Card Vendor Code    ${form_of_payment_vendor}
    ${entry_code}    Set Variable If    '${entry}'=='SINGLE'    SGL    '${entry}'=='DOUBLE'    DBL    '${entry}'=='MULTIPLE'
    ...    MUL
    ${processing_code}    Set Variable If    '${processing}'=='NORMAL'    NOR    '${processing}'=='EXPRESS'    URG
    ${year} =    Get Substring    ${expiry_year}    -2
    ${id} =    Set Variable If    '${passenger_id}'=='${EMPTY}'    1    ${passenger_id}
    Verify Specific Remark Is Written In The PNR    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK${eo_number}\\/PX${passenger_id}    true
    Comment    Run Keyword If    '${passenger_id}'!='${EMPTY}'    Verify Specific Remark Is Written In The PNR    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK${exchange_order}\\/PX${passenger_id}    true
    ...    ELSE    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK${exchange_order}\\/PX1    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/A${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/F${fee_code}    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/CCN${form_of_payment_vendor}${masked_credit_card_number}EXP${expiry_month}${year}\\/D${total_selling_price}    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/FF40-${country_other_services.upper()}\\/FF41-${type.upper()} ${entry_code} ${processing_code}\\/FF34-AB    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/FF35-OTH\\/FF36-M\\/FF47-CWT    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/FF VISA PROCESSING    true

Verify That Accounting Lines For Visa Processing Are Written When FOP is Invoice
    [Arguments]    ${product}    ${vendor}    ${country}=hk
    Get Product Code    hk    ${product}
    Get Vendor Code    hk    ${product}    ${vendor}
    Comment    ${passenger_id}    Set Variable If    ${passenger_id}==${EMPTY}    1    ${passenger_id}
    ${entry}    Convert To Uppercase    ${entries}
    ${processing}    Convert To Uppercase    ${processing}
    ${fee_code}    Set Variable If    '${form_of_payment.lower()}'=='cash or invoice'    FS    '${form_of_payment.lower()}'=='credit card (cx)'    FCX4
    ${entry_code}    Set Variable If    '${entry}'=='SINGLE'    SGL    '${entry}'=='DOUBLE'    DBL    '${entry}'=='MULTIPLE'
    ...    MUL
    ${processing_code}    Set Variable If    '${processing}'=='NORMAL'    NOR    '${processing}'=='EXPRESS'    URG
    ${id} =    Set Variable If    '${passenger_id}'=='${EMPTY}'    1    ${passenger_id}
    Verify Specific Remark Is Written In The PNR    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK${eo_number}\\/PX${passenger_id}    true
    Comment    Run Keyword If    '${passenger_id}'!='${EMPTY}'    Verify Specific Remark Is Written In The PNR    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK${exchange_order}\\/PX${passenger_id}    true
    ...    ELSE    RM \\*MS\\/PC${product_code}\\/V${vendor_code}\\/TK${exchange_order}\\/PX1    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/A${total_selling_price}\\/SF${total_selling_price}\\/C${commission}\\/${fee_code}\\/FF40-${country_other_services.upper()}    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/FF41-${type.upper()} ${entry_code} ${processing_code}\\/FF34-AB/FF35-OTH    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/FF36-M\\/FF47-CWT    true
    Verify Specific Remark Is Written In The PNR    RM \\*MSX\\/FF VISA PROCESSING    true

Verify That Train And Ferry Remarks Are Written In PNR When FOP Is Cash Or Invoice
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${market_identifer}    Set Variable If    "${country}" == "SG"    S    A
    ${id} =    Set Variable If    '${passenger_id}'=='${EMPTY}'    1    ${passenger_id}
    ${departdate}=    Convert Date To Gds Format    ${depart_date}    %m/%d/%Y    true
    ${returndate}=    Convert Date To Gds Format    ${return_date}    %m/%d/%Y    true
    ${location}    Set Variable If    "${depart_origin}" != "${EMPTY}" and "${depart_destination}" != "${EMPTY}"    ${depart_origin.upper()}-${depart_destination.upper()}    "${depart_origin}" == "${EMPTY}" and "${depart_destination}" != "${EMPTY}"    ${depart_destination.upper()}    "${depart_origin}" != "${EMPTY}" and "${depart_destination}" == "${EMPTY}"
    ...    ${depart_origin.upper()}    "${depart_origin}"== "${EMPTY}" and "${depart_destination}" == "${EMPTY}"    ${EMPTY}
    ...    ELSE    INVALID
    ${location}    Get Substring    ${location}    0    20
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX${id}
    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifer}${total_selling_price}/SF${total_selling_price}/C${commission}/FS
    Run Keyword If    "${depart_date}" == "${return_date}"    Verify Specific Remark Is Written In The PNR    RM *MSX/FF40-${location}/FF41-${departdate}
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/FF40-${location}/FF41-${departdate}-${returndate}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify That Train And Ferry Remarks Are Written In PNR When FOP Is Credit Card
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${fop_exp_date}    Set Variable    ${expiry_month}${short_expiry_year}
    ${credit_card_length_excluding_last_four_digits}    Get Length    ${credit_card_number[:-4]}
    ${masked_characters_excluding_last_four}    Evaluate    "".join(["X" * ${credit_card_length_excluding_last_four_digits}])
    ${masked_credit_card_number}    Replace String    ${credit_card_number}    ${credit_card_number[:-4]}    ${masked_characters_excluding_last_four}
    ${market_identifer}    Set Variable If    "${country}" == "SG"    S    A
    ${fop_code}    Run Keyword If    "${form_of_payment}" == "Credit Card (CX)"    Get Credit Card Vendor Code    ${form_of_payment_vendor}
    ...    ELSE    Set Variable    CC
    ${id} =    Set Variable If    '${passenger_id}'=='${EMPTY}'    1    ${passenger_id}
    ${departdate}=    Convert Date To Gds Format    ${depart_date}    %m/%d/%Y    true
    ${returndate}=    Convert Date To Gds Format    ${return_date}    %m/%d/%Y    true
    ${location}    Set Variable If    "${depart_origin}" != "${EMPTY}" and "${depart_destination}" != "${EMPTY}"    ${depart_origin}-${depart_destination}    "${depart_origin}" == "${EMPTY}" and "${depart_destination}" != "${EMPTY}"    ${depart_destination}    "${depart_origin}" != "${EMPTY}" and "${depart_destination}" == "${EMPTY}"
    ...    ${depart_origin}    "${depart_origin}"== "${EMPTY}" and "${depart_destination}" == "${EMPTY}"    ${EMPTY}
    ...    ELSE    INVALID
    ${location}    Get Substring    ${location}    0    20
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX${id}
    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifer}${total_selling_price}/SF${total_selling_price}/C${commission}/F${fop_code}
    Verify Specific Remark Is Written In The PNR    RM \\*MSX/CCN${form_of_payment_vendor}.*EXP${fop_exp_date}/D${total_selling_price}    true
    Run Keyword If    "${depart_date}" == "${return_date}"    Verify Specific Remark Is Written In The PNR    RM *MSX/FF40-${location.upper()}/FF41-${departdate}
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/FF40-${location.upper()}/FF41-${departdate}-${returndate}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify Total Selling Price Computation In Associated Charges
    ${computed_totalsellprice}    Evaluate    (${computed_gross_sell} + ${computed_vat_gst_amount}+ ${computed_merchant_fee})
    ${computed_totalsellprice}    Round Apac    ${computed_totalsellprice}    IN
    ${assoc_charges_total_selling_price}    Convert To Integer    ${assoc_charges_total_selling_price}
    Set Suite Variable    ${computed_totalsellprice}
    Run Keyword And Continue On Failure    Should Be Equal    ${computed_totalsellprice}    ${assoc_charges_total_selling_price}

Verify Total Selling Price Value Is Correct
    [Arguments]    ${expected_total_selling_fare_value}=${EMPTY}
    ${expected_total_selling_price}    Get Variable Value    ${computed_total_selling_price}    ${expected_total_selling_fare_value}
    Get Total Selling Price
    Verify Actual Value Matches Expected Value    ${total_selling_price}    ${expected_total_selling_price}

Verify Transaction Type Dropdown Values
    ${expected_transaction_type_dropdown_values}    Create List    ${EMPTY}    Cancellation    Rebooking    New Issue
    ${actual_transaction_type_dropdown_values}    Get Dropdown Values    [NAME:TransactionTypeComboBox]
    Send    {TAB}
    Log    ${actual_transaction_type_dropdown_values}
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_transaction_type_dropdown_values}    ${actual_transaction_type_dropdown_values}

Verify VAT/GST Amount Computation In Associated Charges
    [Arguments]    ${assoc_charges_product_gst}    ${assoc_charges_product_ot1}    ${assoc_charges_product_ot2}
    [Documentation]    1. Get Product GST, OT1, OT2 amounts from DB or excel file
    ...    2. \ Insert this keyword before this step: Verify Gross Sell Computation In Associated Charges to get ${computed_gross_sell}
    ${value1}=    Evaluate    ${computed_gross_sell} * (${assoc_charges_product_gst} * 0.01)
    ${value2}=    Evaluate    ${computed_gross_sell}* (${assoc_charges_product_ot1} * 0.01)
    ${value3}=    Evaluate    ${computed_gross_sell}* (${assoc_charges_product_ot2} * 0.01)
    ${value1}=    Round Apac    ${value1}    IN
    ${value2}=    Round Apac    ${value2}    IN
    ${value3}=    Round Apac    ${value3}    IN
    ${computed_vat_gst_amount}    Evaluate    ${value1}+${value2}+${value3}
    ${computed_vat_gst_amount}    Round Apac    ${computed_vat_gst_amount}    IN
    Log    ${computed_vat_gst_amount}
    ${assoc_charges_vatgst_amount}    Convert To Integer    ${assoc_charges_vatgst_amount}
    Run Keyword And Continue On Failure    Should Be Equal    ${computed_vat_gst_amount}    ${assoc_charges_vatgst_amount}
    Set Test Variable    ${computed_vat_gst_amount}
    [Return]    ${assoc_charges_vat_gst_amount}

Verify Value Of Airlines
    [Arguments]    ${expected_airlines}
    ${actual_airlines}    Get Control Text Value    [NAME:AirlinesPnrTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_airlines}    ${actual_airlines}

Verify Value Of Airlines PNR
    [Arguments]    ${expected_airlines_pnr}
    ${actual_airlines_pnr}    Get Control Text Value    [NAME:AirlinesPnrTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_airlines_pnr.upper()}    ${actual_airlines_pnr.upper()}

Verify Value Of Cancellation Penalty
    [Arguments]    ${expected_cancellation_penalty}
    ${actual_cancellation_penalty}    Get Control Text Value    [NAME:CancellationPenaltyTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_cancellation_penalty}    ${actual_cancellation_penalty}

Verify Value Of Centralized Desk 1
    [Arguments]    ${expected_centralized_desk_1}
    ${actual_centralized_desk_1}    Get Control Text Value    [NAME:CentralizedDesk1TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_centralized_desk_1}    ${actual_centralized_desk_1}

Verify Value Of Centralized Desk 2
    [Arguments]    ${expected_centralized_desk_2}
    ${actual_centralized_desk_2}    Get Control Text Value    [NAME:CentralizedDesk2TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_centralized_desk_2}    ${actual_centralized_desk_2}

Verify Value Of Email
    [Arguments]    ${expected_email}
    ${actual_email}    Get Control Text Value    [NAME:EmailTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_email}    ${actual_email}

Verify Value Of Entity Name
    [Arguments]    ${expected_entity_name}
    ${actual_entity_name}    Get Control Text Value    [NAME:EntityNameTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_entity_name}    ${actual_entity_name}

Verify Value Of Fare Break Up 1
    [Arguments]    ${expected_fare_break_up_1}
    ${actual_fare_break_up_1}    Get Control Text Value    [NAME:FareBreakUp1TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_fare_break_up_1}    ${actual_fare_break_up_1}

Verify Value Of Fare Break Up 2
    [Arguments]    ${expected_fare_break_up_2}
    ${actual_fare_break_up_2}    Get Control Text Value    [NAME:FareBreakUp2TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_fare_break_up_2}    ${actual_fare_break_up_2}

Verify Value Of Fare Type
    [Arguments]    ${expected_fare_type}
    ${actual_fare_type}    Get Control Text Value    [NAME:FareTypeComboBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_fare_type.upper()}    ${actual_fare_type.upper()}

Verify Value Of GSTIN
    [Arguments]    ${expected_gstin}
    ${actual_gstin}    Get Control Text Value    [NAME:GsTinTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_gstin}    ${actual_gstin}

Verify Value Of LCC Queue Back Remark
    [Arguments]    ${expected_lcc_queue_back_remark}
    ${actual_lcc_queue_back_remark}    Get Control Text Value    [NAME:LccQueueBackRemarkTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_lcc_queue_back_remark}    ${actual_lcc_queue_back_remark}

Verify Value Of Phone No
    [Arguments]    ${expected_phone_no}
    ${actual_phone_no}    Get Control Text Value    [NAME:PhoneNoTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_phone_no}    ${actual_phone_no}

Verify Value Of PoS Remark 1
    [Arguments]    ${expected_pos_remark_1}
    ${actual_pos_remark_1}    Get Control Text Value    [NAME:PosRemark1TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_pos_remark_1}    ${actual_pos_remark_1}

Verify Value Of PoS Remark 2
    [Arguments]    ${expected_pos_remark_2}
    ${actual_pos_remark_2}    Get Control Text Value    [NAME:PosRemark2TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_pos_remark_2}    ${actual_pos_remark_2}

Verify Value Of PoS Remark 3
    [Arguments]    ${expected_pos_remark_3}
    ${actual_pos_remark_3}    Get Control Text Value    [NAME:PosRemark3TextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_pos_remark_3}    ${actual_pos_remark_3}

Verify Value Of Threshold Amount
    [Arguments]    ${expected_threshold_amount}
    ${actual_threshold_amount}    Get Control Text Value    [NAME:ThresholdAmountTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_threshold_amount}    ${actual_threshold_amount}

Verify Value Of Tour Code
    [Arguments]    ${expected_tour_code}
    ${actual_tour_code}    Get Control Text Value    [NAME:TourCodeTextBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_tour_code}    ${actual_tour_code}

Verify Value Of Transaction Type
    [Arguments]    ${expected_transaction_type}
    ${actual_transaction_type}    Get Control Text Value    [NAME:TransactionTypeComboBox]
    Run Keyword And Continue On Failure    Should Be Equal    ${expected_transaction_type}    ${actual_transaction_type}

Verify Vendor Contact Value Is Correct
    [Arguments]    ${expected_vendor_contact}
    Get Vendor Contact Value
    Verify Actual Value Matches Expected Value    ${vendor_contact}    ${expected_vendor_contact}

Verify Vendor Info Fields Are Disabled
    Verify Control Object Is Disabled    [NAME:VendorTextBox]    ${title_power_express}
    Verify Control Object Is Disabled    [NAME:Address1TextBox]    ${title_power_express}
    Verify Control Object Is Disabled    [NAME:Address2TextBox]    ${title_power_express}
    Verify Control Object Is Disabled    [NAME:CityTextBox]    ${title_power_express}
    Verify Control Object Is Disabled    [NAME:CountryTextBox]    ${title_power_express}
    Verify Control Object Is Disabled    [NAME:ContactNumberTextBox]    ${title_power_express}
    Verify Control Object Is Disabled    [NAME:CreditTermsTextBox]    ${title_power_express}

Verify Vendor Info Fields Are Editable
    Set Vendor Email Address    CWT TEST US480 Sprint 6
    Get Control Text Value    [placeholder - Email]
    Run Keyword And Continue On Failure    Should Be True    "${vendor_email_address}" == "${control_text_object}"    msg=The Actual Email Address Not The Expected Email Address
    Set Vendor Fax Number    31ST ZUELLIG BLDG MAKATI
    Set Vendor Reply Email In EO    cwttest@cwt.com

Verify Vendor Info Fields Are Enabled
    Verify Control Object Is Enabled    [NAME:EmailTextBox]    ${title_power_express}
    Verify Control Object Is Enabled    [NAME:FaxNumberTextBox]    ${title_power_express}
    Verify Control Object Is Enabled    [NAME:SupportEmailTextBox]    ${title_power_express}

Verify Vendor Info Fields Are Not Editable
    Set Control Text    [placeholder - Vendor]
    Set Control Text    [placeholder - Address]
    Set Control Text    [placeholder - City]
    Set Control Text    [placeholder - Country]
    Set Control Text    [placeholder - Credit Terms]
    Set Control Text    [placeholder - Contact Number]

Verify Vendor Info Fields Are Visible
    Verify Control Object Is Visible    [NAME:VendorTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:Address1TextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:Address2TextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:CityTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:CountryTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:EmailTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:ContactNumberTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:FaxNumberTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:CreditTermsTextBox]    ${title_power_express}
    Verify Control Object Is Visible    [NAME:SupportEmailTextBox]    ${title_power_express}

Verify Vendor Value Is Correct
    [Arguments]    ${expected_value}=${EMPTY}
    ${value}    Get Control Edit Value    VendorTextBox
    Verify Actual Value Matches Expected Value    ${value}    ${expected_value}
    Take Screenshot

Verify Visa Handling Remarks Are Written When FOP Is Cash Or Invoice In The PNR
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${market_identifier}    Set Variable If    "${country}" == "SG"    S    A
    ${passenger_id}    Get Variable Value    ${passenger_id}    1
    ${gst}    Get Variable Value    ${gst}    ${EMPTY}
    ${selling_price_with_gst}    Run Keyword If    "${gst}" != "${EMPTY}"    Evaluate    ${total_selling_price} + ${gst}
    ...    ELSE    Set Variable    ${total_selling_price}
    ${selling_price_with_gst}    Round APAC    ${selling_price_with_gst}    ${country}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX${passenger_id}
    Run Keyword If    "${gst}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/FS
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/FS
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF40-${country_other_services.upper()}/FF41-${type.upper()} ${entries_remark} ${processing_remark}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF34-AB/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Verify Visa Handling Remarks Are Written When FOP Is Credit Card In The PNR
    [Arguments]    ${product_name}    ${product_code}    ${vendor_code}    ${country}=SG
    ${fop_exp_date}    Set Variable    ${expiry_month}${short_expiry_year}
    ${credit_card_length_excluding_last_four_digits}    Get Length    ${credit_card_number[:-4]}
    ${masked_characters_excluding_last_four}    Evaluate    "".join(["X" * ${credit_card_length_excluding_last_four_digits}])
    ${masked_credit_card_number}    Replace String    ${credit_card_number}    ${credit_card_number[:-4]}    ${masked_characters_excluding_last_four}
    ${market_identifier}    Set Variable If    "${country}" == "SG"    S    A
    ${passenger_id}    Get Variable Value    ${passenger_id}    1
    ${gst}    Get Variable Value    ${gst_amount}    ${EMPTY}
    ${fop_code}    Run Keyword If    "${form_of_payment}" == "Credit Card (CX)"    Get Credit Card Vendor Code    ${form_of_payment_vendor}
    ...    ELSE    Set Variable    CC
    ${selling_price_with_gst}    Run Keyword If    "${gst}" != "${EMPTY}"    Evaluate    ${total_selling_price} + ${gst}
    ...    ELSE    Set Variable    ${total_selling_price}
    ${selling_price_with_gst}    Round APAC    ${selling_price_with_gst}    ${country}
    Verify Specific Remark Is Written In The PNR    RM *MS/PC${product_code}/V${vendor_code}/TK${eo_number}/PX${passenger_id}
    Run Keyword If    "${gst}" != "${EMPTY}"    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/G${gst}/F${fop_code}
    ...    ELSE    Verify Specific Remark Is Written In The PNR    RM *MSX/${market_identifier}${total_selling_price}/SF${total_selling_price}/C${commission}/F${fop_code}
    Verify Specific Remark Is Written In The PNR    RM *MSX/CCN${form_of_payment_vendor}${masked_credit_card_number}EXP${fop_exp_date}/D${selling_price_with_gst}
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF40-${country_other_services.upper()}/FF41-${type.upper()} ${entries_remark} ${processing_remark}/FF34-AB
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF35-OTH/FF36-M/FF47-CWT
    Verify Specific Remark Is Written In The PNR    RM *MSX/FF ${product_name.upper()}

Wait Until Exchange Order Grid Is Displayed
    Wait Until Control Object Is Visible    [NAME:OtherServicesExhangeOrdersControl]

Verify Passive Segment Is Written In The PNR When Product Is Non-Air Other Services
    [Arguments]    ${product}
    ${type_code}    Set Variable If    "${product.lower()}"=="ferry"    SEA    OTH
    ${type_code}    Set Variable If    "${product.lower()}"=="tour domestic"    TOR    OTH
    Get Vendor
    Get Vendor Code For India    ${product}    ${vendor}
    ${date_of_application}    Generate Date X Months From Now    0    180    %d/%b/%Y
    #Convert Date Of Application To GDS Format
    ${date_of_application_split}    Split String    ${date_of_application}    /
    ${day}    Get From List    ${date_of_application_split}    0
    ${month}    Get From List    ${date_of_application_split}    1
    ${month}    Convert To Uppercase    ${month}
    ${date_of_application}    Convert To String    ${day.strip()}${month.strip()}
    Set Suite Variable    ${date}    ${date_of_application}
    Set Variable    ${vendor.upper()}
    Set Suite Variable    ${vendor}    ${vendor.upper().strip()}
    Verify Specific Line Is Written In The PNR    MIS 1A HK1 BLR ${date_of_application}-TYP-${type_code}/SUC-${current_vendor_code}/SUN-${vendor.strip()}/STS-HK/TK-${eo_number}    false    true    true
    Set Suite Variable    ${last_known_passive_segment}    MIS 1A HK1 BLR ${date_of_application}-TYP-${type_code}/SUC-${current_vendor_code}/SUN-${vendor.strip()}/STS-HK/TK-${eo_number}

Verify Passive Segment Is Written When Product Is Meet and Greet
    [Arguments]    ${product}    ${city_name}
    ${vendor_code}    Get Vendor Code For Meet & Greet Product
    ${time_in}    Convert Time From IN To GDS Format    ${time}
    @{date_code_source}    Split String    ${date}    /
    ${date_code}    Catenate    SEPARATOR=${EMPTY}    @{date_code_source}[0]    @{date_code_source}[1]
    Verify Specific Line Is Written In The PNR    MIS 1A HK1 ${city} ${date_code.strip()}-TYP-MAG/SUC-${vendor_code}/SUN-${vendor}/STS-HK/STP-${city_name.upper()}/SC-${city}/SD-${date_code}/ST-${time_in}/TK-${eo_number}/SI-${locations.upper()}    false    true    true

Verify Field Values In Request On Amend EO When Product Is Tour Intl
    [Arguments]    ${identifier_1}    ${identifier_2}
    Log List    ${tour_intl_collection${identifier_1}}
    Log List    ${tour_intl_collection${identifier_2}}
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${tour_intl_collection${identifier_1}}    ${tour_intl_collection${identifier_2}}

Verify Credit Card Fields Are Displayed
    ${cx_number}    Determine Multiple Object Name Based On Active Tab    CreditCardNumberTextBox, Request_CreditCardNumberTextBox    False
    ${cx_pref}    Determine Multiple Object Name Based On Active Tab    CreditCardPreferenceComboBox, Request_CreditCardPreferenceComboBox    False
    ${cx_type}    Determine Multiple Object Name Based On Active Tab    CreditCardTypesComboBox, Request_CreditCardTypesComboBox    False
    ${cx_expiry_date}    Determine Multiple Object Name Based On Active Tab    ExpiryDateDatePicker, Request_ExpiryDateDatePicker    False
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cx_number}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cx_pref}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cx_type}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cx_expiry_date}

Verify Cancellation Policy Fields Are Displayed
    ${cancel_by_radiobutton}    Determine Multiple Object Name Based On Active Tab    CancelByRadioButton, Request_CancelByRadioButton    False
    ${cancel_by_amount}    Determine Multiple Object Name Based On Active Tab    CancelByAmountTextBox, Request_CancelByAmountTextBox    False
    ${cancel_by_type}    Determine Multiple Object Name Based On Active Tab    SelectedCancelByTypeComboBox, Request_CancelByTypeComboBox    False
    ${special_rate_radiobutton}    Determine Multiple Object Name Based On Active Tab    SpecialRateRadioButton, Request_SpecialRateRadioButton    False
    ${others_radiobutton}    Determine Multiple Object Name Based On Active Tab    OthersRadioButton, Request_OthersRadioButton    False
    ${others_textbox}    Determine Multiple Object Name Based On Active Tab    CancelByOthersDescriptionTextBox, Request_CancelByOthersDescriptionTextBox    False
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cancel_by_radiobutton}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cancel_by_amount}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${cancel_by_type}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${special_rate_radiobutton}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${others_radiobutton}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${others_textbox}

Verify Daily Rate Fields Are Displayed
    ${daily_rate_currency}    Determine Multiple Object Name Based On Active Tab    DailyRateCurrencyComboBox    False
    ${daily_rate_textbox}    Determine Multiple Object Name Based On Active Tab    DailyRateAmountTextBox    False
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${daily_rate_currency}
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    ${daily_rate_textbox}

Verify Default Values Of Credit Card In Request
    Run Keyword And Continue On Failure    Run Keyword If    '${guarantee_by}'!='Credit Card'    FAIL    Incorrect Default Value in Gurantee By
    Get Credit Card Details In Request Tab
    @{expected_cc}    Create List    XXXXXXXXXXXX1111    ${EMPTY}    VI    12/25
    Run Keyword And Continue On Failure    Lists Should Be Equal    ${expected_cc}    ${cc_info}    Incorrect Default Value in Gurantee By

Verify Itinerary Remarks Lines From PNR
    [Arguments]    ${is_written}=True
    [Documentation]    Pass one of three cancellation policies to verify RIR Line
    ...
    ...
    ...    | ${selected_segement} = Selected Segment line number
    ...    | ${car_segement} = Needs to be retrieved from PNR lines prior to calling this keyword if verification is for car segment.
    ...    | ${hotel_segement} = Needs to be retrieved from PNR lines prior to calling this keyword if verification is for hotel segment.
    ...    | ${cancel_by} & ${others} - Should be retrieved prior to calling this Keyword
    ...
    ...    Note: It is required to run Get Cancellation Policy And Get <segment name> Segment Keywords to get the values
    Run Keyword If    ${car_segment_flag}==1    Set Test Variable    ${selected_segment}    ${car_segment_number}
    Run Keyword If    ${hotel_segment_flag}==1    Set Test Variable    ${selected_segment}    ${hotel_segment_number}
    ${cancel_by_value}=    Set Variable If    "${cancel_by_status.lower()}"=="true"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="false"    ${cancel_by[1]}
    ${cancel_by_uom}=    Set Variable If    "${cancel_by_status.lower()}"=="true"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="false"    ${cancel_by[2]}
    ${others_text}=    Set Variable If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="true"    ${others[1]}
    Retrieve PNR Details From Amadeus    ${current_pnr}
    Run Keyword If    "${cancel_by_status.lower()}"=="true"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="false" and "${is_written.lower()}"=="true"    Verify Specific Line Is Written In The PNR    RIR CANCEL BY ${cancel_by_value} ${cancel_by_uom.upper()} PRIOR TO ARRIVAL OR PENALTY APPLIED/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="true"and"${others_status.lower()}"=="false" and "${is_written.lower()}"=="true"    Verify Specific Line Is Written In The PNR    RIR FORFEITED IN CASE OF NO SHOW/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="true"and"${others_status.lower()}"=="false" and "${is_written.lower()}"=="true"    Verify Specific Line Is Written In The PNR    RIR NO CANCELLATION. ENTIRE AMOUNT WILL BE/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="true" and "${is_written.lower()}"=="true"    Verify Specific Line Is Written In The PNR    RIR CANCELLATION POLICY: ${others_text.upper()}/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="true"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="false" and "${is_written.lower()}"=="false"    Verify Specific Line Is Not Written In The PNR    RIR CANCEL BY ${cancel_by_value} ${cancel_by_uom.upper()} PRIOR TO ARRIVAL OR PENALTY APPLIED/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="true"and"${others_status.lower()}"=="false" and "${is_written.lower()}"=="false"    Verify Specific Line Is Not Written In The PNR    RIR FORFEITED IN CASE OF NO SHOW/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="true"and"${others_status.lower()}"=="false" and "${is_written.lower()}"=="false"    Verify Specific Line Is Not Written In The PNR    RIR NO CANCELLATION. ENTIRE AMOUNT WILL BE/S${selected_segment}
    Run Keyword If    "${cancel_by_status.lower()}"=="false"and"${special_rate_no_cancellation_status.lower()}"=="false"and"${others_status.lower()}"=="true" and "${is_written.lower()}"=="false"    Verify Specific Line Is Not Written In The PNR    RIR CANCELLATION POLICY: ${others_text.upper()}/S${selected_segment}

Verify Previous Itinerary Remarks Line Is Removed From PNR
    Verify Specific Line Is Not Written In The PNR    ${previous_rir}

Get City For Hotel
    ${object}    Determine Multiple Object Name Based On Active Tab    Request_CityNameTextBox    False
    ${city_name}    Get Control Text Value    ${object}
    Set Suite Variable    ${city_name}

Verify Passive Segment Is Written In The PNR When Product Is Tour Intl
    Convert Date To GDS Format For India    ${start_date}
    Set Suite Variable    ${start_day_date}    ${date_dd_mmm}
    Convert Date To GDS Format For India    ${end_date}
    Set Suite Variable    ${end_day_date}    ${date_dd_mmm}
    Get Vendor Code For India    ${product}    ${vendor}
    ${city_name}    Get Equivalent City Name    ${city_codes_and_names}    ${city_code}
    Set Test Variable    ${city_name}
    Verify Specific Line Is Written In The PNR    MIS 1A HK1 ${city_code.upper()} ${start_day_date.upper()}-TYP-TOR/SUC-${current_vendor_code}/SUN-${vendor.upper()}/STS-HK/STP-${city_name.upper()}/SC-${city_code.upper()}/SD-${start_day_date.upper()}/ED-${end_day_date.upper()}/TK-${eo_number}    false    true    true

Verify Fields Are Displayed in Request When Product Is Insurance
    Wait Until Control Object Is Visible    [NAME:OtherServicesTabControl]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Details1TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Details2TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:Details3TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:InternalRemarksTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EmployeeNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:EmployeeNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PassportNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AreaTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AssigneeNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:GenderTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DateOfBirthTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:AddressHouseBldgTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:StreetNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:SubAreaCityTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:PinCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:StateTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:CountryTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:MobileNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:MaritalStatusTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:DepartureDateTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Is Visible    [NAME:ArrivalDateTextBox]

Verify Fields Are Optional In Request When Product Is Insurance
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Details2TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:Details3TextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:InternalRemarksTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:EmployeeNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:EmployeeNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PassportNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AreaTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AssigneeNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:GenderTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DateOfBirthTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:AddressHouseBldgTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:StreetNameTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:SubAreaCityTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:PinCodeTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:StateTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:CountryTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:MobileNumberTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:MaritalStatusTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:DepartureDateTextBox]
    Run Keyword And Continue On Failure    Verify Control Object Field Is Not Mandatory    [NAME:ArrivalDateTextBox]

Verify Fields Are Mandatory In Request When Product Is Insurance
    Run Keyword And Continue On Failure    Verify Control Object Field Is Mandatory    [NAME:Details1TextBox]

Verify Passive Segment Is Written In The PNR When Product Is Insurance
    ${date_of_application}    Generate Date X Months From Now    0    180    %d/%b/%Y
    #Convert Date Of Application To GDS Format
    ${date_of_application_split}    Split String    ${date_of_application}    /
    ${day}    Get From List    ${date_of_application_split}    0
    ${month}    Get From List    ${date_of_application_split}    1
    ${month}    Convert To Uppercase    ${month}
    ${date_of_application}    Convert To String    ${day.strip()}${month.strip()}
    Set Suite Variable    ${date}    ${date_of_application}
    Set Variable    ${vendor.upper()}
    Set Suite Variable    ${vendor}    ${vendor.upper().strip()}
    Verify Specific Line Is Written In The PNR    MIS 1A HK1 BLR ${date}-TYP-INS/SUC-${current_vendor_code}/SUN-${vendor}/STS-HK/TK-${eo_number}    false    true    true
